openapi: 3.0.0
info:
  title: Catalogi API
  description: "Een API om een zaaktypecatalogus (ZTC) te benaderen.\n\nDe zaaktypecatalogus\
    \ helpt gemeenten om het proces vanuit de 'vraag van een\nklant' (productaanvraag,\
    \ melding, aangifte, informatieverzoek e.d.) tot en met\nhet leveren van een passend\
    \ antwoord daarop in te richten, inclusief de\nbijbehorende informatievoorziening.\n\
    \nEen CATALOGUS bestaat uit ZAAKTYPEn, INFORMATIEOBJECTTYPEn en BESLUITTYPEn en\n\
    wordt typisch gebruikt om een ZAAK (in de Zaken API), INFORMATIEOBJECT (in de\n\
    Documenten API) en BESLUIT (in de Besluiten API) te voorzien van type,\nstandaardwaarden\
    \ en processtructuur.\n\n**Afhankelijkheden**\n\nDeze API is afhankelijk van:\n\
    \n* Gemeentelijke Selectielijst API\n* Autorisaties API *(optioneel)*\n\n\n**Autorisatie**\n\
    \nDeze API vereist autorisatie. Je kan de\n[token-tool](https://zaken-auth.vng.cloud/)\
    \ gebruiken om een token te\ngenereren.\n\n_Zelf een token genereren_\n\nDe tokens\
    \ die gebruikt worden voor autorisatie zijn [jwt.io][JWT's] (JSON web\ntoken).\
    \ In de API calls moeten deze gebruikt worden in de `Authorization`\nheader:\n\
    \n```\nAuthorization: Bearer <token>\n```\n\nOm een JWT te genereren heb je een\
    \ `client ID` en een `secret` nodig. Het JWT\nmoet gebouwd worden volgens het\
    \ `HS256` algoritme. De vereiste payload is:\n\n```json\n{\n    \"iss\": \"<client\
    \ ID>\",\n    \"iat\": 1572863906,\n    \"client_id\": \"<client ID>\",\n    \"\
    user_id\": \"<user identifier>\",\n    \"user_representation\": \"<user representation>\"\
    \n}\n```\n\nAls `issuer` gebruik je dus je eigen client ID. De `iat` timestamp\
    \ is een\nUNIX-timestamp die aangeeft op welk moment het token gegenereerd is.\n\
    \n`user_id` en `user_representation` zijn nodig voor de audit trails. Het zijn\n\
    vrije velden met als enige beperking dat de lengte maximaal de lengte van\nde\
    \ overeenkomstige velden in de audit trail resources is (zie rest API spec).\n\
    \n\n### Notificaties\n\nDeze API publiceert notificaties op het kanaal `zaaktypen`.\n\
    \n**Main resource**\n\n`zaaktype`\n\n\n\n**Kenmerken**\n\n* `catalogus`: URL-referentie\
    \ naar de CATALOGUS waartoe dit ZAAKTYPE behoort.\n\n**Resources en acties**\n\
    - `zaaktype`: create, update, destroy\n\n\nDeze API publiceert notificaties op\
    \ het kanaal `besluittypen`.\n\n**Main resource**\n\n`besluittype`\n\n\n\n**Kenmerken**\n\
    \n* `catalogus`: URL-referentie naar de CATALOGUS waartoe dit BESLUITTYPE behoort.\n\
    \n**Resources en acties**\n- `besluittype`: create, update, destroy\n\n\nDeze\
    \ API publiceert notificaties op het kanaal `informatieobjecttypen`.\n\n**Main\
    \ resource**\n\n`informatieobjecttype`\n\n\n\n**Kenmerken**\n\n* `catalogus`:\
    \ URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE behoort.\n\
    \n**Resources en acties**\n- `informatieobjecttype`: create, update, destroy\n\
    \n\n**Handige links**\n\n* [Documentatie](https://vng-realisatie.github.io/gemma-zaken/standaard)\n\
    * [Zaakgericht werken](https://vng-realisatie.github.io/gemma-zaken)\n"
  contact:
    url: https://vng-realisatie.github.io/gemma-zaken
    email: standaarden.ondersteuning@vng.nl
  license:
    name: EUPL 1.2
    url: https://opensource.org/licenses/EUPL-1.2
  version: 1.2.0-rc2
security:
- JWT-Claims: []
paths:
  /besluittypen:
    get:
      operationId: besluittype_list
      summary: Alle BESLUITTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: catalogus
        in: query
        description: URL-referentie naar de CATALOGUS waartoe dit BESLUITTYPE behoort.
        required: false
        schema:
          type: string
          format: uri
      - name: zaaktypen
        in: query
        description: ZAAKTYPE met ZAAKen die relevant kunnen zijn voor dit BESLUITTYPE
        required: false
        schema:
          type: string
      - name: informatieobjecttypen
        in: query
        description: Het INFORMATIEOBJECTTYPE van informatieobjecten waarin besluiten
          van dit BESLUITTYPE worden vastgelegd.
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: omschrijving
        in: query
        description: Omschrijving van de aard van BESLUITen van het BESLUITTYPE.
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BesluitType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: besluittype_create
      summary: Maak een BESLUITTYPE aan.
      description: Maak een BESLUITTYPE aan.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/BesluitType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BesluitType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /besluittypen/{uuid}:
    get:
      operationId: besluittype_read
      summary: Een specifieke BESLUITTYPE opvragen.
      description: Een specifieke BESLUITTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BesluitType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: besluittype_headers
      summary: De headers voor een specifiek(e) BESLUITTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: besluittype_update
      summary: Werk een BESLUITTYPE in zijn geheel bij.
      description: 'Werk een BESLUITTYPE in zijn geheel bij. Dit kan alleen als het
        een concept

        betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/BesluitType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BesluitType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: besluittype_partial_update
      summary: Werk een BESLUITTYPE deels bij.
      description: Werk een BESLUITTYPE deels bij. Dit kan alleen als het een concept
        betreft.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/BesluitType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BesluitType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: besluittype_delete
      summary: Verwijder een BESLUITTYPE.
      description: Verwijder een BESLUITTYPE. Dit kan alleen als het een concept betreft.
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /besluittypen/{uuid}/publish:
    post:
      operationId: besluittype_publish
      summary: Publiceer het concept BESLUITTYPE.
      description: 'Publiceren van het besluittype zorgt ervoor dat dit in een Besluiten
        API kan gebruikt

        worden. Na het publiceren van een besluittype zijn geen inhoudelijke wijzigingen

        meer mogelijk. Indien er na het publiceren nog wat gewijzigd moet worden,
        dan moet

        je een nieuwe versie aanmaken.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BesluitType'
        '400':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatieFout'
        '401':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '403':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '404':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '406':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '409':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '410':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '415':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '429':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '500':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
      tags:
      - besluittypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /catalogussen:
    get:
      operationId: catalogus_list
      summary: Alle CATALOGUSsen opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: domein
        in: query
        description: Een afkorting waarmee wordt aangegeven voor welk domein in een
          CATALOGUS ZAAKTYPEn zijn uitgewerkt.
        required: false
        schema:
          type: string
      - name: domein__in
        in: query
        description: Multiple values may be separated by commas.
        required: false
        schema:
          type: string
      - name: rsin
        in: query
        description: Het door een kamer toegekend uniek nummer voor de INGESCHREVEN
          NIET-NATUURLIJK PERSOON die de eigenaar is van een CATALOGUS.
        required: false
        schema:
          type: string
      - name: rsin__in
        in: query
        description: Multiple values may be separated by commas.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Catalogus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - catalogussen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: catalogus_create
      summary: Maak een CATALOGUS aan.
      description: Maak een CATALOGUS aan.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogus'
        required: true
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - catalogussen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /catalogussen/{uuid}:
    get:
      operationId: catalogus_read
      summary: Een specifieke CATALOGUS opvragen.
      description: Een specifieke CATALOGUS opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - catalogussen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: catalogus_headers
      summary: De headers voor een specifiek(e) CATALOGUS opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - catalogussen
      security:
      - JWT-Claims:
        - catalogi.lezen
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /eigenschappen:
    get:
      operationId: eigenschap_list
      summary: Alle EIGENSCHAPpen opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: zaaktype
        in: query
        description: URL-referentie naar het ZAAKTYPE van de ZAAKen waarvoor deze
          EIGENSCHAP van belang is.
        required: false
        schema:
          type: string
          format: uri
      - name: zaaktypeIdentificatie
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Eigenschap'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: eigenschap_create
      summary: Maak een EIGENSCHAP aan.
      description: 'Maak een EIGENSCHAP aan. Dit kan alleen als het bijbehorende ZAAKTYPE
        een

        concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/Eigenschap'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eigenschap'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /eigenschappen/{uuid}:
    get:
      operationId: eigenschap_read
      summary: Een specifieke EIGENSCHAP opvragen.
      description: Een specifieke EIGENSCHAP opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eigenschap'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: eigenschap_headers
      summary: De headers voor een specifiek(e) EIGENSCHAP opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: eigenschap_update
      summary: Werk een EIGENSCHAP in zijn geheel bij.
      description: 'Werk een EIGENSCHAP in zijn geheel bij. Dit kan alleen als het

        bijbehorende ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/Eigenschap'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eigenschap'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: eigenschap_partial_update
      summary: Werk een EIGENSCHAP deels bij.
      description: 'Werk een EIGENSCHAP deels bij. Dit kan alleen als het bijbehorende

        ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/Eigenschap'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eigenschap'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: eigenschap_delete
      summary: Verwijder een EIGENSCHAP.
      description: 'Verwijder een EIGENSCHAP. Dit kan alleen als het bijbehorende
        ZAAKTYPE een

        concept betreft.'
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - eigenschappen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /informatieobjecttypen:
    get:
      operationId: informatieobjecttype_list
      summary: Alle INFORMATIEOBJECTTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: catalogus
        in: query
        description: URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE
          behoort.
        required: false
        schema:
          type: string
          format: uri
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: omschrijving
        in: query
        description: Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/InformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: informatieobjecttype_create
      summary: Maak een INFORMATIEOBJECTTYPE aan.
      description: Maak een INFORMATIEOBJECTTYPE aan.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/InformatieObjectType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /informatieobjecttypen/{uuid}:
    get:
      operationId: informatieobjecttype_read
      summary: Een specifieke INFORMATIEOBJECTTYPE opvragen.
      description: Een specifieke INFORMATIEOBJECTTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieObjectType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: informatieobjecttype_headers
      summary: De headers voor een specifiek(e) INFORMATIEOBJECTTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: informatieobjecttype_update
      summary: Werk een INFORMATIEOBJECTTYPE in zijn geheel bij.
      description: 'Werk een INFORMATIEOBJECTTYPE in zijn geheel bij. Dit kan alleen
        als het een

        concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/InformatieObjectType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: informatieobjecttype_partial_update
      summary: Werk een INFORMATIEOBJECTTYPE deels bij.
      description: 'Werk een INFORMATIEOBJECTTYPE deels bij. Dit kan alleen als het
        een concept

        betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/InformatieObjectType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: informatieobjecttype_delete
      summary: Verwijder een INFORMATIEOBJECTTYPE.
      description: 'Verwijder een INFORMATIEOBJECTTYPE. Dit kan alleen als het een
        concept

        betreft.'
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /informatieobjecttypen/{uuid}/publish:
    post:
      operationId: informatieobjecttype_publish
      summary: Publiceer het concept INFORMATIEOBJECTTYPE.
      description: 'Publiceren van het informatieobjecttype zorgt ervoor dat dit in
        een Documenten API

        kan gebruikt worden. Na het publiceren van een informatieobjecttype zijn geen

        inhoudelijke wijzigingen meer mogelijk. Indien er na het publiceren nog wat

        gewijzigd moet worden, dan moet je een nieuwe versie aanmaken.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieObjectType'
        '400':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatieFout'
        '401':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '403':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '404':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '406':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '409':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '410':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '415':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '429':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '500':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
      tags:
      - informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /resultaattypen:
    get:
      operationId: resultaattype_list
      summary: Alle RESULTAATTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: zaaktype
        in: query
        description: URL-referentie naar het ZAAKTYPE van ZAAKen waarin resultaten
          van dit RESULTAATTYPE bereikt kunnen worden.
        required: false
        schema:
          type: string
          format: uri
      - name: zaaktypeIdentificatie
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResultaatType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: resultaattype_create
      summary: Maak een RESULTAATTYPE aan.
      description: 'Maak een RESULTAATTYPE aan. Dit kan alleen als het bijbehorende
        ZAAKTYPE een

        concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ResultaatType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultaatType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /resultaattypen/{uuid}:
    get:
      operationId: resultaattype_read
      summary: Een specifieke RESULTAATTYPE opvragen.
      description: Een specifieke RESULTAATTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultaatType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: resultaattype_headers
      summary: De headers voor een specifiek(e) RESULTAATTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: resultaattype_update
      summary: Werk een RESULTAATTYPE in zijn geheel bij.
      description: 'Werk een RESULTAATTYPE in zijn geheel bij. Dit kan alleen als
        het

        bijbehorende ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ResultaatType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultaatType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: resultaattype_partial_update
      summary: Werk een RESULTAATTYPE deels bij.
      description: 'Werk een RESULTAATTYPE deels bij. Dit kan alleen als het bijbehorende

        ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ResultaatType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultaatType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: resultaattype_delete
      summary: Verwijder een RESULTAATTYPE.
      description: 'Verwijder een RESULTAATTYPE. Dit kan alleen als het bijbehorende
        ZAAKTYPE

        een concept betreft.'
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - resultaattypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /roltypen:
    get:
      operationId: roltype_list
      summary: Alle ROLTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: zaaktype
        in: query
        description: URL-referentie naar het ZAAKTYPE waar deze ROLTYPEn betrokken
          kunnen zijn.
        required: false
        schema:
          type: string
          format: uri
      - name: zaaktypeIdentificatie
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: omschrijvingGeneriek
        in: query
        description: Algemeen gehanteerde omschrijving van de aard van de ROL.
        required: false
        schema:
          type: string
          enum:
          - adviseur
          - behandelaar
          - belanghebbende
          - beslisser
          - initiator
          - klantcontacter
          - zaakcoordinator
          - mede_initiator
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RolType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: roltype_create
      summary: Maak een ROLTYPE aan.
      description: 'Maak een ROLTYPE aan. Dit kan alleen als het bijbehorende ZAAKTYPE
        een

        concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/RolType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /roltypen/{uuid}:
    get:
      operationId: roltype_read
      summary: Een specifieke ROLTYPE opvragen.
      description: Een specifieke ROLTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: roltype_headers
      summary: De headers voor een specifiek(e) ROLTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: roltype_update
      summary: Werk een ROLTYPE in zijn geheel bij.
      description: 'Werk een ROLTYPE in zijn geheel bij. Dit kan alleen als het

        bijbehorende ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/RolType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: roltype_partial_update
      summary: Werk een ROLTYPE deels bij.
      description: 'Werk een ROLTYPE deels bij. Dit kan alleen als het bijbehorende

        ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/RolType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: roltype_delete
      summary: Verwijder een ROLTYPE.
      description: 'Verwijder een ROLTYPE. Dit kan alleen als het bijbehorende ZAAKTYPE
        een

        concept betreft.'
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - roltypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
  /statustypen:
    get:
      operationId: statustype_list
      summary: Alle STATUSTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: zaaktype
        in: query
        description: URL-referentie naar het ZAAKTYPE van ZAAKen waarin STATUSsen
          van dit STATUSTYPE bereikt kunnen worden.
        required: false
        schema:
          type: string
          format: uri
      - name: zaaktypeIdentificatie
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: statustype_create
      summary: Maak een STATUSTYPE aan.
      description: 'Maak een STATUSTYPE aan. Dit kan alleen als het bijbehorende ZAAKTYPE
        een

        concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/StatusType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /statustypen/{uuid}:
    get:
      operationId: statustype_read
      summary: Een specifieke STATUSTYPE opvragen.
      description: Een specifieke STATUSTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: statustype_headers
      summary: De headers voor een specifiek(e) STATUSTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: statustype_update
      summary: Werk een STATUSTYPE in zijn geheel bij.
      description: 'Werk een STATUSTYPE in zijn geheel bij. Dit kan alleen als het

        bijbehorende ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/StatusType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: statustype_partial_update
      summary: Werk een STATUSTYPE deels bij.
      description: 'Werk een STATUSTYPE deels bij. Dit kan alleen als het bijbehorende

        ZAAKTYPE een concept betreft.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/StatusType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: statustype_delete
      summary: Verwijder een STATUSTYPE.
      description: 'Verwijder een STATUSTYPE. Dit kan alleen als het bijbehorende
        ZAAKTYPE een

        concept betreft.'
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - statustypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /zaakobjecttypen:
    get:
      operationId: zaakobjecttype_list
      summary: Alle ZAAKOBJECTTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: anderObjecttype
        in: query
        description: Aanduiding waarmee wordt aangegeven of het ZAAKOBJECTTYPE een
          ander, niet in RSGB en RGBZ voorkomend, objecttype betreft.
        required: false
        schema:
          type: string
      - name: catalogus
        in: query
        description: URL-referentie naar de CATALOGUS waartoe dit ZAAKOBJECTTYPE behoort.
        required: false
        schema:
          type: string
          format: uri
      - name: datumBeginGeldigheid
        in: query
        description: De datum waarop het is ontstaan.
        required: false
        schema:
          type: string
      - name: datumEindeGeldigheid
        in: query
        description: De datum waarop het is opgeheven.
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: objecttype
        in: query
        description: URL-referentie naar de OBJECTTYPE waartoe dit ZAAKOBJECTTYPE
          behoort.
        required: false
        schema:
          type: string
          format: uri
      - name: relatieOmschrijving
        in: query
        description: Omschrijving van de betrekking van het Objecttype op zaken van
          het gerelateerde ZAAKTYPE.
        required: false
        schema:
          type: string
      - name: zaaktype
        in: query
        description: URL-referentie naar de ZAAKTYPE waartoe dit ZAAKOBJECTTYPE behoort.
        required: false
        schema:
          type: string
          format: uri
      - name: zaaktypeIdentificatie
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZaakObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: zaakobjecttype_create
      summary: Maak een ZAAKOBJECTTYPE aan.
      description: Maak een ZAAKOBJECTTYPE aan.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakObjectType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /zaakobjecttypen/{uuid}:
    get:
      operationId: zaakobjecttype_read
      summary: Een specifieke ZAAKOBJECTTYPE opvragen.
      description: Een specifieke ZAAKOBJECTTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakObjectType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: zaakobjecttype_headers
      summary: De headers voor een specifiek(e) ZAAKOBJECTTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: zaakobjecttype_update
      summary: Werk een ZAAKOBJECTTYPE in zijn geheel bij.
      description: Werk een ZAAKOBJECTTYPE in zijn geheel bij.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakObjectType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: zaakobjecttype_partial_update
      summary: Werk een ZAAKOBJECTTYPE deels bij.
      description: Werk een ZAAKOBJECTTYPE deels bij.
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakObjectType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: zaakobjecttype_delete
      summary: Verwijder een ZAAKOBJECTTYPE.
      description: Verwijder een ZAAKOBJECTTYPE.
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaakobjecttypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /zaaktype-informatieobjecttypen:
    get:
      operationId: zaakinformatieobjecttype_list
      summary: Alle ZAAKTYPE-INFORMATIEOBJECTTYPE relaties opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: zaaktype
        in: query
        description: URL-referentie naar het ZAAKTYPE.
        required: false
        schema:
          type: string
          format: uri
      - name: informatieobjecttype
        in: query
        description: URL-referentie naar het INFORMATIEOBJECTTYPE.
        required: false
        schema:
          type: string
          format: uri
      - name: richting
        in: query
        description: Aanduiding van de richting van informatieobjecten van het gerelateerde
          INFORMATIEOBJECTTYPE bij zaken van het gerelateerde ZAAKTYPE.
        required: false
        schema:
          type: string
          enum:
          - inkomend
          - intern
          - uitgaand
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZaakTypeInformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: zaakinformatieobjecttype_create
      summary: Maak een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie aan.
      description: 'Maak een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie aan. Dit kan alleen
        als het

        bijbehorende ZAAKTYPE een concept betreft.


        Er wordt gevalideerd op:

        - `zaaktype` en `informatieobjecttype` behoren tot dezelfde `catalogus`'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakTypeInformatieObjectType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakTypeInformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /zaaktype-informatieobjecttypen/{uuid}:
    get:
      operationId: zaakinformatieobjecttype_read
      summary: Een specifieke ZAAKTYPE-INFORMATIEOBJECTTYPE relatie opvragen.
      description: Een specifieke ZAAKTYPE-INFORMATIEOBJECTTYPE relatie opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakTypeInformatieObjectType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: zaakinformatieobjecttype_headers
      summary: De headers voor een specifiek(e) ZAAKINFORMATIEOBJECTTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: zaakinformatieobjecttype_update
      summary: Werk een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie in zijn geheel bij.
      description: 'Werk een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie in zijn geheel
        bij. Dit kan

        alleen als het bijbehorende ZAAKTYPE een concept betreft.


        Er wordt gevalideerd op:

        - `zaaktype` en `informatieobjecttype` behoren tot dezelfde `catalogus`'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakTypeInformatieObjectType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakTypeInformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: zaakinformatieobjecttype_partial_update
      summary: Werk een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie deels bij.
      description: 'Werk een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie deels bij. Dit
        kan alleen

        als het bijbehorende ZAAKTYPE een concept betreft.


        Er wordt gevalideerd op:

        - `zaaktype` en `informatieobjecttype` behoren tot dezelfde `catalogus`'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakTypeInformatieObjectType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakTypeInformatieObjectType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: zaakinformatieobjecttype_delete
      summary: Verwijder een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie.
      description: 'Verwijder een ZAAKTYPE-INFORMATIEOBJECTTYPE relatie. Dit kan alleen
        als

        het bijbehorende ZAAKTYPE een concept betreft.


        Er wordt gevalideerd op:

        - `zaaktype` of `informatieobjecttype` is nog niet gepubliceerd'
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktype-informatieobjecttypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /zaaktypen:
    get:
      operationId: zaaktype_list
      summary: Alle ZAAKTYPEn opvragen.
      description: Deze lijst kan gefilterd wordt met query-string parameters.
      parameters:
      - name: catalogus
        in: query
        description: URL-referentie naar de CATALOGUS waartoe dit ZAAKTYPE behoort.
        required: false
        schema:
          type: string
          format: uri
      - name: identificatie
        in: query
        description: Unieke identificatie van het ZAAKTYPE binnen de CATALOGUS waarin
          het ZAAKTYPE voorkomt.
        required: false
        schema:
          type: string
      - name: trefwoorden
        in: query
        description: Multiple values may be separated by commas.
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: 'filter objects depending on their concept status:

          * `alles`: Toon objecten waarvan het attribuut `concept` true of false is.

          * `concept`: Toon objecten waarvan het attribuut `concept` true is.

          * `definitief`: Toon objecten waarvan het attribuut `concept` false is (standaard).

          '
        required: false
        schema:
          type: string
      - name: datumGeldigheid
        in: query
        description: ''
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Een pagina binnen de gepagineerde set resultaten.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZaakType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    post:
      operationId: zaaktype_create
      summary: Maak een ZAAKTYPE aan.
      description: "Maak een ZAAKTYPE aan.\n\nEr wordt gevalideerd op:\n- geldigheid\
        \ `catalogus` URL, dit moet een catalogus binnen dezelfde API zijn\n- Uniciteit\
        \ `catalogus` en `omschrijving`. Dezelfde omeschrijving mag enkel\n  opnieuw\
        \ gebruikt worden als het zaaktype een andere geldigheidsperiode\n  kent dan\
        \ bestaande zaaktypen.\n- `deelzaaktypen` moeten tot dezelfde catalogus behoren\
        \ als het ZAAKTYPE."
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakType'
      responses:
        '201':
          description: Created
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
            Location:
              schema:
                type: string
                format: uri
              description: URL waar de resource leeft.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters: []
  /zaaktypen/{uuid}:
    get:
      operationId: zaaktype_read
      summary: Een specifieke ZAAKTYPE opvragen.
      description: Een specifieke ZAAKTYPE opvragen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakType'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    head:
      operationId: zaaktype_headers
      summary: De headers voor een specifiek(e) ZAAKTYPE opvragen
      description: Vraag de headers op die je bij een GET request zou krijgen.
      parameters:
      - name: If-None-Match
        in: header
        description: "Voer een voorwaardelijk verzoek uit. Deze header moet \xE9\xE9\
          n of meerdere ETag-waardes bevatten van resources die de consumer gecached\
          \ heeft. Indien de waarde van de ETag van de huidige resource voorkomt in\
          \ deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie\
          \ [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match)\
          \ voor meer informatie."
        required: false
        examples:
          oneValue:
            summary: "E\xE9n ETag-waarde"
            value: '"79054025255fb1a26e4bc422aef54eb4"'
          multipleValues:
            summary: Meerdere ETag-waardes
            value: '"79054025255fb1a26e4bc422aef54eb4", "e4d909c290d0fb1ca068ffaddf22cbd0"'
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: De ETag berekend op de response body JSON. Indien twee
                resources exact dezelfde ETag hebben, dan zijn deze resources identiek
                aan elkaar. Je kan de ETag gebruiken om caching te implementeren.
              schema:
                type: string
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.lezen
    put:
      operationId: zaaktype_update
      summary: Werk een ZAAKTYPE in zijn geheel bij.
      description: 'Werk een ZAAKTYPE in zijn geheel bij. Dit kan alleen als het een
        concept

        betreft.


        Er wordt gevalideerd op:

        - `deelzaaktypen` moeten tot dezelfde catalogus behoren als het ZAAKTYPE.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    patch:
      operationId: zaaktype_partial_update
      summary: Werk een ZAAKTYPE deels bij.
      description: 'Werk een ZAAKTYPE deels bij. Dit kan alleen als het een concept
        betreft.


        Er wordt gevalideerd op:

        - `deelzaaktypen` moeten tot dezelfde catalogus behoren als het ZAAKTYPE.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        $ref: '#/components/requestBodies/ZaakType'
      responses:
        '200':
          description: OK
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    delete:
      operationId: zaaktype_delete
      summary: Verwijder een ZAAKTYPE.
      description: Verwijder een ZAAKTYPE. Dit kan alleen als het een concept betreft.
      responses:
        '204':
          description: No content
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - (catalogi.schrijven | catalogi.geforceerd-verwijderen)
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
  /zaaktypen/{uuid}/publish:
    post:
      operationId: zaaktype_publish
      summary: Publiceer het concept ZAAKTYPE.
      description: 'Publiceren van het zaaktype zorgt ervoor dat dit in een Zaken
        API kan gebruikt

        worden. Na het publiceren van een zaaktype zijn geen inhoudelijke wijzigingen

        meer mogelijk - ook niet de statustypen, eigenschappen... etc. Indien er na
        het

        publiceren nog wat gewijzigd moet worden, dan moet je een nieuwe versie

        aanmaken.'
      parameters:
      - name: Content-Type
        in: header
        description: Content type van de verzoekinhoud.
        required: true
        schema:
          type: string
          enum:
          - application/json
      responses:
        '200':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZaakType'
        '400':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatieFout'
        '401':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '403':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '404':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '406':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '409':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '410':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '415':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '429':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
        '500':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'Geeft een specifieke API-versie aan in de context van
                een specifieke aanroep. Voorbeeld: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fout'
      tags:
      - zaaktypen
      security:
      - JWT-Claims:
        - catalogi.schrijven
    parameters:
    - name: uuid
      in: path
      description: Unieke resource identifier (UUID4)
      required: true
      schema:
        type: string
        format: uuid
tags:
- name: besluittypen
  description: 'Alle BESLUITTYPEn van de besluiten die het resultaat kunnen zijn van
    het

    zaakgericht werken van de behandelende organisatie(s).'
- name: catalogussen
  description: "De verzameling van ZAAKTYPEn, INFORMATIEOBJECTTYPEn en BESLUITTYPEn\
    \ voor\neen domein die als \xE9\xE9n geheel beheerd wordt."
- name: eigenschappen
  description: 'Een relevant inhoudelijk gegeven dat bij ZAAKen van dit ZAAKTYPE

    geregistreerd moet kunnen worden en geen standaard kenmerk is van een zaak.'
- name: informatieobjecttypen
  description: 'Een INFORMATIEOBJECTTYPE beschijft de karakteristieken van een document
    of

    ander object dat informatie bevat.'
- name: resultaattypen
  description: 'Het betreft de indeling of groepering van resultaten van zaken van
    hetzelfde

    ZAAKTYPE naar hun aard, zoals ''verleend'', ''geweigerd'', ''verwerkt'', etc.'
- name: roltypen
  description: 'Generieke aanduiding van de aard van een ROL die een BETROKKENE kan

    uitoefenen in ZAAKen van een ZAAKTYPE.'
- name: statustypen
  description: Generieke aanduiding van de aard van een status.
- name: zaakobjecttypen
  description: ''
- name: zaaktype-informatieobjecttypen
  description: 'Geeft aan welke INFORMATIEOBJECTTYPEn binnen een ZAAKTYPE mogelijk
    zijn en

    hoe de richting is.'
- name: zaaktypen
  description: 'Een ZAAKTYPE beschrijft het geheel van karakteristieke eigenschappen
    van

    zaken van eenzelfde soort.'
servers:
- url: /api/v1
components:
  responses:
    '400':
      description: Bad request
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidatieFout'
    '401':
      description: Unauthorized
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '403':
      description: Forbidden
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '404':
      description: Not found
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '406':
      description: Not acceptable
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '409':
      description: Conflict
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '410':
      description: Gone
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '412':
      description: Precondition failed
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '415':
      description: Unsupported media type
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '429':
      description: Too many requests
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
    '500':
      description: Internal server error
      headers:
        API-version:
          schema:
            type: string
          description: 'Geeft een specifieke API-versie aan in de context van een
            specifieke aanroep. Voorbeeld: 1.2.1.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Fout'
  requestBodies:
    Eigenschap:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Eigenschap'
      required: true
    ZaakType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZaakType'
      required: true
    RolType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RolType'
      required: true
    StatusType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusType'
      required: true
    BesluitType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BesluitType'
      required: true
    InformatieObjectType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InformatieObjectType'
      required: true
    ResultaatType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultaatType'
      required: true
    ZaakObjectType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZaakObjectType'
      required: true
    ZaakTypeInformatieObjectType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZaakTypeInformatieObjectType'
      required: true
  securitySchemes:
    JWT-Claims:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BesluitType:
      required:
      - catalogus
      - zaaktypen
      - publicatieIndicatie
      - informatieobjecttypen
      - beginGeldigheid
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        catalogus:
          title: Catalogus
          description: URL-referentie naar de CATALOGUS waartoe dit BESLUITTYPE behoort.
          type: string
          format: uri
        zaaktypen:
          description: ZAAKTYPE met ZAAKen die relevant kunnen zijn voor dit BESLUITTYPE
          type: array
          items:
            description: ZAAKTYPE met ZAAKen die relevant kunnen zijn voor dit BESLUITTYPE
            type: string
            format: uri
          uniqueItems: true
        omschrijving:
          title: Omschrijving
          description: Omschrijving van de aard van BESLUITen van het BESLUITTYPE.
          type: string
          maxLength: 80
        omschrijvingGeneriek:
          title: Omschrijving generiek
          description: Algemeen gehanteerde omschrijving van de aard van BESLUITen
            van het BESLUITTYPE
          type: string
          maxLength: 80
        besluitcategorie:
          title: Besluitcategorie
          description: Typering van de aard van BESLUITen van het BESLUITTYPE.
          type: string
          maxLength: 40
        reactietermijn:
          title: Reactietermijn
          description: Een tijdsduur in ISO 8601 formaat, gerekend vanaf de verzend-
            of publicatiedatum, waarbinnen verweer tegen een besluit van het besluittype
            mogelijk is.
          type: string
          format: duration
          nullable: true
        publicatieIndicatie:
          title: Publicatie indicatie
          description: Aanduiding of BESLUITen van dit BESLUITTYPE gepubliceerd moeten
            worden.
          type: boolean
        publicatietekst:
          title: Publicatietekst
          description: De generieke tekst van de publicatie van BESLUITen van dit
            BESLUITTYPE
          type: string
        publicatietermijn:
          title: Publicatietermijn
          description: Een tijdsduur in ISO 8601 formaat, gerekend vanaf de verzend-
            of publicatiedatum, dat BESLUITen van dit BESLUITTYPE gepubliceerd moeten
            blijven.
          type: string
          format: duration
          nullable: true
        toelichting:
          title: Toelichting
          description: Een eventuele toelichting op dit BESLUITTYPE.
          type: string
        informatieobjecttypen:
          description: URL-referenties naar het INFORMATIEOBJECTTYPE van informatieobjecten
            waarin besluiten van dit BESLUITTYPE worden vastgelegd.
          type: array
          items:
            description: URL-referenties naar het INFORMATIEOBJECTTYPE van informatieobjecten
              waarin besluiten van dit BESLUITTYPE worden vastgelegd.
            type: string
            format: uri
          uniqueItems: true
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop het is ontstaan.
          type: string
          format: date
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop het is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
        concept:
          title: Concept
          description: Geeft aan of het object een concept betreft. Concepten zijn
            niet-definitieve versies en zouden niet gebruikt moeten worden buiten
            deze API.
          type: boolean
          readOnly: true
        resultaattypen:
          description: Het BESLUITTYPE van besluiten die gepaard gaan met resultaten
            van het RESULTAATTYPE.
          type: array
          items:
            title: Is resultaat van
            description: Het BESLUITTYPE van besluiten die gepaard gaan met resultaten
              van het RESULTAATTYPE.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        resultaattypenOmschrijving:
          type: array
          items:
            type: string
          readOnly: true
          uniqueItems: true
        vastgelegdIn:
          type: array
          items:
            type: string
          readOnly: true
          uniqueItems: true
    Fout:
      required:
      - code
      - title
      - status
      - detail
      - instance
      type: object
      properties:
        type:
          title: Type
          description: URI referentie naar het type fout, bedoeld voor developers
          type: string
        code:
          title: Code
          description: Systeemcode die het type fout aangeeft
          type: string
          minLength: 1
        title:
          title: Title
          description: Generieke titel voor het type fout
          type: string
          minLength: 1
        status:
          title: Status
          description: De HTTP status code
          type: integer
        detail:
          title: Detail
          description: Extra informatie bij de fout, indien beschikbaar
          type: string
          minLength: 1
        instance:
          title: Instance
          description: URI met referentie naar dit specifiek voorkomen van de fout.
            Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld.
          type: string
          minLength: 1
    FieldValidationError:
      required:
      - name
      - code
      - reason
      type: object
      properties:
        name:
          title: Name
          description: Naam van het veld met ongeldige gegevens
          type: string
          minLength: 1
        code:
          title: Code
          description: Systeemcode die het type fout aangeeft
          type: string
          minLength: 1
        reason:
          title: Reason
          description: Uitleg wat er precies fout is met de gegevens
          type: string
          minLength: 1
    ValidatieFout:
      required:
      - code
      - title
      - status
      - detail
      - instance
      - invalidParams
      type: object
      properties:
        type:
          title: Type
          description: URI referentie naar het type fout, bedoeld voor developers
          type: string
        code:
          title: Code
          description: Systeemcode die het type fout aangeeft
          type: string
          minLength: 1
        title:
          title: Title
          description: Generieke titel voor het type fout
          type: string
          minLength: 1
        status:
          title: Status
          description: De HTTP status code
          type: integer
        detail:
          title: Detail
          description: Extra informatie bij de fout, indien beschikbaar
          type: string
          minLength: 1
        instance:
          title: Instance
          description: URI met referentie naar dit specifiek voorkomen van de fout.
            Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld.
          type: string
          minLength: 1
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/FieldValidationError'
    Catalogus:
      required:
      - domein
      - rsin
      - contactpersoonBeheerNaam
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        domein:
          title: Domein
          description: Een afkorting waarmee wordt aangegeven voor welk domein in
            een CATALOGUS ZAAKTYPEn zijn uitgewerkt.
          type: string
          maxLength: 5
          minLength: 1
        rsin:
          title: Rsin
          description: Het door een kamer toegekend uniek nummer voor de INGESCHREVEN
            NIET-NATUURLIJK PERSOON die de eigenaar is van een CATALOGUS.
          type: string
          maxLength: 9
          minLength: 1
        contactpersoonBeheerNaam:
          title: Naam contactpersoon
          description: De naam van de contactpersoon die verantwoordelijk is voor
            het beheer van de CATALOGUS.
          type: string
          maxLength: 40
          minLength: 1
        contactpersoonBeheerTelefoonnummer:
          title: Telefoonnummer
          description: Het telefoonnummer van de contactpersoon die verantwoordelijk
            is voor het beheer van de CATALOGUS.
          type: string
          maxLength: 20
        contactpersoonBeheerEmailadres:
          title: Emailadres
          description: Het emailadres van de contactpersoon die verantwoordelijk is
            voor het beheer van de CATALOGUS.
          type: string
          format: email
          maxLength: 254
        zaaktypen:
          description: URL-referenties naar ZAAKTYPEn die in deze CATALOGUS worden
            ontsloten.
          type: array
          items:
            description: URL-referenties naar ZAAKTYPEn die in deze CATALOGUS worden
              ontsloten.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        besluittypen:
          description: URL-referenties naar BESLUITTYPEn die in deze CATALOGUS worden
            ontsloten.
          type: array
          items:
            description: URL-referenties naar BESLUITTYPEn die in deze CATALOGUS worden
              ontsloten.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        informatieobjecttypen:
          description: URL-referenties naar INFORMATIEOBJECTTYPEn die in deze CATALOGUS
            worden ontsloten.
          type: array
          items:
            description: URL-referenties naar INFORMATIEOBJECTTYPEn die in deze CATALOGUS
              worden ontsloten.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        naam:
          title: Naam
          description: De benaming die is gegeven aan de zaaktypecatalogus.
          type: string
          maxLength: 200
          nullable: true
        versie:
          title: Versie
          description: Versie-aanduiding van de van toepassing zijnde zaaktypecatalogus.
          type: string
          maxLength: 20
          nullable: true
        begindatumVersie:
          title: Begindatum versie
          description: Datum waarop de versie van de zaaktypecatalogus van toepassing
            is geworden.
          type: string
          format: date
          nullable: true
    EigenschapSpecificatie:
      required:
      - formaat
      - lengte
      - kardinaliteit
      type: object
      properties:
        groep:
          title: Groep
          description: Benaming van het object of groepattribuut waarvan de EIGENSCHAP
            een inhoudelijk gegeven specificeert.
          type: string
          maxLength: 32
        formaat:
          title: Formaat
          description: 'Het soort tekens waarmee waarden van de EIGENSCHAP kunnen
            worden vastgelegd.


            Uitleg bij mogelijke waarden:


            * `tekst` - Tekst

            * `getal` - Getal

            * `datum` - Datum

            * `datum_tijd` - Datum/tijd'
          type: string
          enum:
          - tekst
          - getal
          - datum
          - datum_tijd
        lengte:
          title: Lengte
          description: Het aantal karakters (lengte) waarmee waarden van de EIGENSCHAP
            worden vastgelegd.
          type: string
          maxLength: 14
          minLength: 1
        kardinaliteit:
          title: Kardinaliteit
          description: Het aantal mogelijke voorkomens van waarden van deze EIGENSCHAP
            bij een zaak van het ZAAKTYPE.
          type: string
          maxLength: 3
          minLength: 1
        waardenverzameling:
          description: Waarden die deze EIGENSCHAP kan hebben.
          type: array
          items:
            title: Waardenverzameling
            type: string
            maxLength: 100
            minLength: 1
    Eigenschap:
      required:
      - naam
      - definitie
      - specificatie
      - zaaktype
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        naam:
          title: Naam
          description: De naam van de EIGENSCHAP
          type: string
          maxLength: 20
          minLength: 1
        catalogus:
          title: Catalogus
          type: string
          format: uri
          readOnly: true
        definitie:
          title: Definitie
          description: De beschrijving van de betekenis van deze EIGENSCHAP
          type: string
          maxLength: 255
          minLength: 1
        specificatie:
          $ref: '#/components/schemas/EigenschapSpecificatie'
        toelichting:
          title: Toelichting
          description: Een toelichting op deze EIGENSCHAP en het belang hiervan voor
            zaken van dit ZAAKTYPE.
          type: string
          maxLength: 1000
        zaaktype:
          title: Zaaktype
          description: URL-referentie naar het ZAAKTYPE van de ZAAKen waarvoor deze
            EIGENSCHAP van belang is.
          type: string
          format: uri
        zaaktypeIdentificatie:
          title: Zaaktype identificatie
          type: string
          readOnly: true
        statustype:
          title: Status type
          description: Status type moet (onder andere) deze EIGENSCHAP hebben, voordat
            een STATUS van het STATUSTYPE kan worden gezet.
          type: string
          format: uri
          nullable: true
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop de EIGENSCHAP is ontstaan.
          type: string
          format: date
          nullable: true
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop de EIGENSCHAP is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
    InformatieObjectType:
      required:
      - catalogus
      - omschrijving
      - vertrouwelijkheidaanduiding
      - beginGeldigheid
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        catalogus:
          title: Catalogus
          description: URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE
            behoort.
          type: string
          format: uri
        omschrijving:
          title: Omschrijving
          description: Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          type: string
          maxLength: 80
          minLength: 1
        vertrouwelijkheidaanduiding:
          title: Vertrouwelijkheidaanduiding
          description: 'Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE
            voor de openbaarheid bestemd zijn.


            Uitleg bij mogelijke waarden:


            * `openbaar` - Openbaar

            * `beperkt_openbaar` - Beperkt openbaar

            * `intern` - Intern

            * `zaakvertrouwelijk` - Zaakvertrouwelijk

            * `vertrouwelijk` - Vertrouwelijk

            * `confidentieel` - Confidentieel

            * `geheim` - Geheim

            * `zeer_geheim` - Zeer geheim'
          type: string
          enum:
          - openbaar
          - beperkt_openbaar
          - intern
          - zaakvertrouwelijk
          - vertrouwelijk
          - confidentieel
          - geheim
          - zeer_geheim
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop het is ontstaan.
          type: string
          format: date
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop het is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
        concept:
          title: Concept
          description: Geeft aan of het object een concept betreft. Concepten zijn
            niet-definitieve versies en zouden niet gebruikt moeten worden buiten
            deze API.
          type: boolean
          readOnly: true
        zaaktypen:
          description: URL-referenties naar De INFORMATIEOBJECTTYPEn die relevant
            kunnen zijn voor ZAAKen van dit ZAAKTYPE.
          type: array
          items:
            description: URL-referenties naar De INFORMATIEOBJECTTYPEn die relevant
              kunnen zijn voor ZAAKen van dit ZAAKTYPE.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        besluittypen:
          description: URL-referenties naar het INFORMATIEOBJECTTYPE van informatieobjecten
            waarin besluiten van dit BESLUITTYPE worden vastgelegd.
          type: array
          items:
            description: URL-referenties naar het INFORMATIEOBJECTTYPE van informatieobjecten
              waarin besluiten van dit BESLUITTYPE worden vastgelegd.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
    BrondatumArchiefprocedure:
      description: Specificatie voor het bepalen van de brondatum voor de start van
        de Archiefactietermijn (=brondatum) van het zaakdossier.
      required:
      - afleidingswijze
      type: object
      properties:
        afleidingswijze:
          title: Afleidingswijze brondatum
          description: "Wijze van bepalen van de brondatum.\n\nUitleg bij mogelijke\
            \ waarden:\n\n* `afgehandeld` - (Afgehandeld) De termijn start op de datum\
            \ waarop de zaak is afgehandeld (ZAAK.Einddatum in het RGBZ).\n* `ander_datumkenmerk`\
            \ - (Ander datumkenmerk) De termijn start op de datum die is vastgelegd\
            \ in een ander datumveld dan de datumvelden waarop de overige waarden\
            \ (van deze attribuutsoort) betrekking hebben. `Objecttype`, `Registratie`\
            \ en `Datumkenmerk` zijn niet leeg.\n* `eigenschap` - (Eigenschap) De\
            \ termijn start op de datum die vermeld is in een zaaktype-specifieke\
            \ eigenschap (zijnde een `datumveld`). `ResultaatType.ZaakType` heeft\
            \ een `Eigenschap`; `Objecttype`, en `Datumkenmerk` zijn niet leeg.\n\
            * `gerelateerde_zaak` - (Gerelateerde zaak) De termijn start op de datum\
            \ waarop de gerelateerde zaak is afgehandeld (`ZAAK.Einddatum` of `ZAAK.Gerelateerde_zaak.Einddatum`\
            \ in het RGBZ). `ResultaatType.ZaakType` heeft gerelateerd `ZaakType`\n\
            * `hoofdzaak` - (Hoofdzaak) De termijn start op de datum waarop de gerelateerde\
            \ zaak is afgehandeld, waarvan de zaak een deelzaak is (`ZAAK.Einddatum`\
            \ van de hoofdzaak in het RGBZ). ResultaatType.ZaakType is deelzaaktype\
            \ van ZaakType.\n* `ingangsdatum_besluit` - (Ingangsdatum besluit) De\
            \ termijn start op de datum waarop het besluit van kracht wordt (`BESLUIT.Ingangsdatum`\
            \ in het RGBZ).\tResultaatType.ZaakType heeft relevant BesluitType\n*\
            \ `termijn` - (Termijn) De termijn start een vast aantal jaren na de datum\
            \ waarop de zaak is afgehandeld (`ZAAK.Einddatum` in het RGBZ).\n* `vervaldatum_besluit`\
            \ - (Vervaldatum besluit) De termijn start op de dag na de datum waarop\
            \ het besluit vervalt (`BESLUIT.Vervaldatum` in het RGBZ). ResultaatType.ZaakType\
            \ heeft relevant BesluitType\n* `zaakobject` - (Zaakobject) De termijn\
            \ start op de einddatum geldigheid van het zaakobject waarop de zaak betrekking\
            \ heeft (bijvoorbeeld de overlijdendatum van een Persoon). M.b.v. de attribuutsoort\
            \ `Objecttype` wordt vastgelegd om welke zaakobjecttype het gaat; m.b.v.\
            \ de attribuutsoort `Datumkenmerk` wordt vastgelegd welke datum-attribuutsoort\
            \ van het zaakobjecttype het betreft."
          type: string
          enum:
          - afgehandeld
          - ander_datumkenmerk
          - eigenschap
          - gerelateerde_zaak
          - hoofdzaak
          - ingangsdatum_besluit
          - termijn
          - vervaldatum_besluit
          - zaakobject
        datumkenmerk:
          title: Datumkenmerk
          description: Naam van de attribuutsoort van het procesobject dat bepalend
            is voor het einde van de procestermijn.
          type: string
          maxLength: 80
        einddatumBekend:
          title: Einddatum bekend
          description: Indicatie dat de einddatum van het procesobject gedurende de
            uitvoering van de zaak bekend moet worden. Indien deze nog niet bekend
            is en deze waarde staat op `true`, dan kan de zaak (nog) niet afgesloten
            worden.
          type: boolean
        objecttype:
          title: Objecttype
          description: 'Het soort object in de registratie dat het procesobject representeert.


            Uitleg bij mogelijke waarden:


            * `adres` - Adres

            * `besluit` - Besluit

            * `buurt` - Buurt

            * `enkelvoudig_document` - Enkelvoudig document

            * `gemeente` - Gemeente

            * `gemeentelijke_openbare_ruimte` - Gemeentelijke openbare ruimte

            * `huishouden` - Huishouden

            * `inrichtingselement` - Inrichtingselement

            * `kadastrale_onroerende_zaak` - Kadastrale onroerende zaak

            * `kunstwerkdeel` - Kunstwerkdeel

            * `maatschappelijke_activiteit` - Maatschappelijke activiteit

            * `medewerker` - Medewerker

            * `natuurlijk_persoon` - Natuurlijk persoon

            * `niet_natuurlijk_persoon` - Niet-natuurlijk persoon

            * `openbare_ruimte` - Openbare ruimte

            * `organisatorische_eenheid` - Organisatorische eenheid

            * `pand` - Pand

            * `spoorbaandeel` - Spoorbaandeel

            * `status` - Status

            * `terreindeel` - Terreindeel

            * `terrein_gebouwd_object` - Terrein gebouwd object

            * `vestiging` - Vestiging

            * `waterdeel` - Waterdeel

            * `wegdeel` - Wegdeel

            * `wijk` - Wijk

            * `woonplaats` - Woonplaats

            * `woz_deelobject` - Woz deel object

            * `woz_object` - Woz object

            * `woz_waarde` - Woz waarde

            * `zakelijk_recht` - Zakelijk recht

            * `overige` - Overige'
          type: string
          enum:
          - adres
          - besluit
          - buurt
          - enkelvoudig_document
          - gemeente
          - gemeentelijke_openbare_ruimte
          - huishouden
          - inrichtingselement
          - kadastrale_onroerende_zaak
          - kunstwerkdeel
          - maatschappelijke_activiteit
          - medewerker
          - natuurlijk_persoon
          - niet_natuurlijk_persoon
          - openbare_ruimte
          - organisatorische_eenheid
          - pand
          - spoorbaandeel
          - status
          - terreindeel
          - terrein_gebouwd_object
          - vestiging
          - waterdeel
          - wegdeel
          - wijk
          - woonplaats
          - woz_deelobject
          - woz_object
          - woz_waarde
          - zakelijk_recht
          - overige
        registratie:
          title: Registratie
          description: De naam van de registratie waarvan het procesobject deel uit
            maakt.
          type: string
          maxLength: 80
        procestermijn:
          title: Brondatum procestermijn
          description: De periode dat het zaakdossier na afronding van de zaak actief
            gebruikt en/of geraadpleegd wordt ter ondersteuning van de taakuitoefening
            van de organisatie. Enkel relevant indien de afleidingswijze 'termijn'
            is.
          type: string
          format: duration
          nullable: true
      nullable: true
    ResultaatType:
      required:
      - zaaktype
      - omschrijving
      - resultaattypeomschrijving
      - selectielijstklasse
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        zaaktype:
          title: is van
          description: URL-referentie naar het ZAAKTYPE van ZAAKen waarin resultaten
            van dit RESULTAATTYPE bereikt kunnen worden.
          type: string
          format: uri
        zaaktypeIdentificatie:
          title: Zaaktype identificatie
          type: string
          readOnly: true
        omschrijving:
          title: Omschrijving
          description: Omschrijving van de aard van resultaten van het RESULTAATTYPE.
          type: string
          maxLength: 30
          minLength: 1
        resultaattypeomschrijving:
          title: Resultaattypeomschrijving
          description: Algemeen gehanteerde omschrijving van de aard van resultaten
            van het RESULTAATTYPE. Dit moet een URL-referentie zijn naar de referenlijst
            van generieke resultaattypeomschrijvingen. Im ImZTC heet dit 'omschrijving
            generiek'
          type: string
          format: uri
          maxLength: 1000
          minLength: 1
        omschrijvingGeneriek:
          title: Omschrijving generiek
          description: Waarde van de omschrijving-generiek referentie (attribuut `omschrijving`)
          type: string
          readOnly: true
          minLength: 1
        selectielijstklasse:
          title: Selectielijstklasse
          description: URL-referentie naar de, voor het archiefregime bij het RESULTAATTYPE
            relevante, categorie in de Selectielijst Archiefbescheiden (RESULTAAT
            in de Selectielijst API) van de voor het ZAAKTYPE verantwoordelijke overheidsorganisatie.
          type: string
          format: uri
          maxLength: 1000
          minLength: 1
        toelichting:
          title: Toelichting
          description: Een toelichting op dit RESULTAATTYPE en het belang hiervan
            voor ZAAKen waarin een resultaat van dit RESULTAATTYPE wordt geselecteerd.
          type: string
        archiefnominatie:
          title: Archiefnominatie
          description: 'Aanduiding die aangeeft of ZAAKen met een resultaat van dit
            RESULTAATTYPE blijvend moeten worden bewaard of (op termijn) moeten worden
            vernietigd. Indien niet expliciet opgegeven wordt dit gevuld vanuit de
            selectielijst.


            Uitleg bij mogelijke waarden:


            * `blijvend_bewaren` - Het zaakdossier moet bewaard blijven en op de Archiefactiedatum
            overgedragen worden naar een archiefbewaarplaats.

            * `vernietigen` - Het zaakdossier moet op of na de Archiefactiedatum vernietigd
            worden.'
          type: string
          enum:
          - blijvend_bewaren
          - vernietigen
        archiefactietermijn:
          title: Archiefactietermijn
          description: De termijn, na het vervallen van het bedrjfsvoeringsbelang,
            waarna het zaakdossier (de ZAAK met alle bijbehorende INFORMATIEOBJECTen)
            van een ZAAK met een resultaat van dit RESULTAATTYPE vernietigd of overgebracht
            (naar een archiefbewaarplaats) moet worden. Voor te vernietigen dossiers
            betreft het de in die Selectielijst genoemde bewaartermjn. Voor blijvend
            te bewaren zaakdossiers betreft het de termijn vanaf afronding van de
            zaak tot overbrenging (de procestermijn is dan nihil).
          type: string
          format: duration
          nullable: true
        brondatumArchiefprocedure:
          $ref: '#/components/schemas/BrondatumArchiefprocedure'
        procesobjectaard:
          title: Procesobjectaard
          description: Omschrijving van het object, subject of gebeurtenis waarop,
            vanuit archiveringsoptiek, het resultaattype bij zaken van dit type betrekking
            heeft.
          type: string
          maxLength: 200
          nullable: true
        catalogus:
          title: Catalogus
          description: URL-referentie naar de CATALOGUS waartoe dit RESULTAATTYPE
            behoort.
          type: string
          format: uri
          nullable: true
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop de RESULTAATTYPE is ontstaan.
          type: string
          format: date
          nullable: true
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop de RESULTAATTYPE is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
        indicatieSpecifiek:
          title: Indicatie specifiek
          description: Aanduiding of het, vanuit archiveringsoptiek, een resultaattype
            betreft dat specifiek is voor een bepaalde procesobjectaard.
          type: boolean
          nullable: true
        procestermijn:
          title: Procestermijn
          description: De periode dat het zaakdossier na afronding van de zaak actief
            gebruikt en/of geraadpleegd wordt ter ondersteuning van de taakuitoefening
            van de organisatie.
          type: string
          format: duration
          nullable: true
        besluittypen:
          type: array
          items:
            type: string
            format: uri
            nullable: true
          uniqueItems: true
        besluittypeOmschrijving:
          type: array
          items:
            type: string
          readOnly: true
          uniqueItems: true
        informatieobjecttypen:
          description: De INFORMATIEOBJECTTYPEn die verplicht aanwezig moeten zijn
            in het zaakdossier van ZAAKen van dit ZAAKTYPE voordat een resultaat van
            dit RESULTAATTYPE kan worden gezet.
          type: array
          items:
            description: De INFORMATIEOBJECTTYPEn die verplicht aanwezig moeten zijn
              in het zaakdossier van ZAAKen van dit ZAAKTYPE voordat een resultaat
              van dit RESULTAATTYPE kan worden gezet.
            type: string
            format: uri
            nullable: true
          uniqueItems: true
        informatieobjecttypeOmschrijving:
          type: array
          items:
            type: string
          readOnly: true
          uniqueItems: true
    RolType:
      required:
      - zaaktype
      - omschrijving
      - omschrijvingGeneriek
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        zaaktype:
          title: Zaaktype
          description: URL-referentie naar het ZAAKTYPE waar deze ROLTYPEn betrokken
            kunnen zijn.
          type: string
          format: uri
        zaaktypeIdentificatie:
          title: Zaaktype identificatie
          type: string
          readOnly: true
        omschrijving:
          title: Omschrijving
          description: Omschrijving van de aard van de ROL.
          type: string
          maxLength: 100
          minLength: 1
        omschrijvingGeneriek:
          title: Omschrijving generiek
          description: "Algemeen gehanteerde omschrijving van de aard van de ROL.\n\
            \nUitleg bij mogelijke waarden:\n\n* `adviseur` - (Adviseur) Kennis in\
            \ dienst stellen van de behandeling van (een deel van) een zaak.\n* `behandelaar`\
            \ - (Behandelaar) De vakinhoudelijke behandeling doen van (een deel van)\
            \ een zaak.\n* `belanghebbende` - (Belanghebbende) Vanuit eigen en objectief\
            \ belang rechtstreeks betrokken zijn bij de behandeling en/of de uitkomst\
            \ van een zaak.\n* `beslisser` - (Beslisser) Nemen van besluiten die voor\
            \ de uitkomst van een zaak noodzakelijk zijn.\n* `initiator` - (Initiator)\
            \ Aanleiding geven tot de start van een zaak ..\n* `klantcontacter` -\
            \ (Klantcontacter) Het eerste aanspreekpunt zijn voor vragen van burgers\
            \ en bedrijven ..\n* `zaakcoordinator` - (Zaakco\xF6rdinator) Er voor\
            \ zorg dragen dat de behandeling van de zaak in samenhang uitgevoerd wordt\
            \ conform de daarover gemaakte afspraken.\n* `mede_initiator` - Mede-initiator"
          type: string
          enum:
          - adviseur
          - behandelaar
          - belanghebbende
          - beslisser
          - initiator
          - klantcontacter
          - zaakcoordinator
          - mede_initiator
        catalogus:
          title: Catalogus
          description: URL-referentie naar de CATALOGUS waartoe dit ROLTYPE behoort.
          type: string
          format: uri
          nullable: true
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop het is ontstaan.
          type: string
          format: date
          nullable: true
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop het is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
    CheckListItem:
      required:
      - itemnaam
      - vraagstelling
      type: object
      properties:
        itemnaam:
          title: Itemnaam
          description: De betekenisvolle benaming van het checklistitem
          type: string
          maxLength: 30
          minLength: 1
        toelichting:
          title: Toelichting
          description: Beschrijving van de overwegingen bij het controleren van het
            aandachtspunt
          type: string
          maxLength: 1000
          nullable: true
        vraagstelling:
          title: Vraagstelling
          description: Een betekenisvolle vraag waaruit blijkt waarop het aandachtspunt
            gecontroleerd moet worden.
          type: string
          maxLength: 255
          minLength: 1
        verplicht:
          title: Verplicht
          description: Het al dan niet verplicht zijn van controle van het aandachtspunt
            voorafgaand aan het bereiken van de status van het gerelateerde STATUSTYPE.
          type: boolean
    StatusType:
      required:
      - omschrijving
      - zaaktype
      - volgnummer
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        omschrijving:
          title: Omschrijving
          description: Een korte, voor de initiator van de zaak relevante, omschrijving
            van de aard van de STATUS van zaken van een ZAAKTYPE.
          type: string
          maxLength: 80
          minLength: 1
        omschrijvingGeneriek:
          title: Omschrijving generiek
          description: Algemeen gehanteerde omschrijving van de aard van STATUSsen
            van het STATUSTYPE
          type: string
          maxLength: 80
        statustekst:
          title: Statustekst
          description: De tekst die wordt gebruikt om de Initiator te informeren over
            het bereiken van een STATUS van dit STATUSTYPE bij het desbetreffende
            ZAAKTYPE.
          type: string
          maxLength: 1000
        zaaktype:
          title: Zaaktype
          description: URL-referentie naar het ZAAKTYPE van ZAAKen waarin STATUSsen
            van dit STATUSTYPE bereikt kunnen worden.
          type: string
          format: uri
        catalogus:
          title: Catalogus
          type: string
          format: uri
          readOnly: true
        zaaktypeIdentificatie:
          title: Zaaktype identificatie
          type: string
          readOnly: true
        volgnummer:
          title: Volgnummer
          description: Een volgnummer voor statussen van het STATUSTYPE binnen een
            zaak.
          type: integer
          maximum: 9999
          minimum: 1
        isEindstatus:
          title: Is eindstatus
          description: Geeft aan dat dit STATUSTYPE een eindstatus betreft. Dit gegeven
            is afgeleid uit alle STATUSTYPEn van dit ZAAKTYPE met het hoogste volgnummer.
          type: boolean
          readOnly: true
        informeren:
          title: Informeren
          description: "Aanduiding die aangeeft of na het zetten van een STATUS van\
            \ dit STATUSTYPE de Initiator moet worden ge\xEFnformeerd over de statusovergang."
          type: boolean
        doorlooptijd:
          title: doorlooptijd
          description: De door de zaakbehandelende organisatie(s) gestelde norm voor
            de doorlooptijd voor het bereiken van STATUSsen van dit STATUSTYPE bij
            het desbetreffende ZAAKTYPE.
          type: string
          format: duration
          nullable: true
        toelichting:
          title: Toelichting
          description: Een eventuele toelichting op dit STATUSTYPE.
          type: string
          maxLength: 1000
          nullable: true
        checklistitemStatustype:
          type: array
          items:
            $ref: '#/components/schemas/CheckListItem'
        eigenschappen:
          description: de EIGENSCHAPpen die verplicht een waarde moeten hebben gekregen,
            voordat een STATUS van dit STATUSTYPE kan worden gezet.
          type: array
          items:
            description: de EIGENSCHAPpen die verplicht een waarde moeten hebben gekregen,
              voordat een STATUS van dit STATUSTYPE kan worden gezet.
            type: string
            format: uri
            nullable: true
          uniqueItems: true
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop het is ontstaan.
          type: string
          format: date
          nullable: true
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop het is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
    ZaakObjectType:
      required:
      - anderObjecttype
      - beginGeldigheid
      - objecttype
      - relatieOmschrijving
      - zaaktype
      - catalogus
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        anderObjecttype:
          title: Ander objecttype
          description: Aanduiding waarmee wordt aangegeven of het ZAAKOBJECTTYPE een
            ander, niet in RSGB en RGBZ voorkomend, objecttype betreft.
          type: boolean
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop het is ontstaan.
          type: string
          format: date
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop het is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
        objecttype:
          title: Objecttype
          description: URL-referentie naar de OBJECTTYPE waartoe dit ZAAKOBJECTTYPE
            behoort.
          type: string
          format: uri
          maxLength: 200
          minLength: 1
        relatieOmschrijving:
          title: Relatie omschrijving
          description: Omschrijving van de betrekking van het Objecttype op zaken
            van het gerelateerde ZAAKTYPE.
          type: string
          maxLength: 80
          minLength: 1
        zaaktype:
          title: Zaaktype
          description: URL-referentie naar de ZAAKTYPE waartoe dit ZAAKOBJECTTYPE
            behoort.
          type: string
          format: uri
        zaaktypeIdentificatie:
          title: Zaaktype identificatie
          type: string
          readOnly: true
        resultaattypen:
          description: URL-referenties naar de RESULTAATTYPEN.
          type: array
          items:
            description: URL-referenties naar de RESULTAATTYPEN.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        statustypen:
          description: URL-referenties naar de STATUSTYPEN.
          type: array
          items:
            description: URL-referenties naar de STATUSTYPEN.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        catalogus:
          title: Catalogus
          description: URL-referentie naar de CATALOGUS waartoe dit ZAAKOBJECTTYPE
            behoort.
          type: string
          format: uri
    ZaakTypeInformatieObjectType:
      required:
      - zaaktype
      - informatieobjecttype
      - volgnummer
      - richting
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        zaaktype:
          title: Zaaktype
          description: URL-referentie naar het ZAAKTYPE.
          type: string
          format: uri
        zaaktypeIdentificatie:
          title: Zaaktype identificatie
          type: string
          readOnly: true
        catalogus:
          title: Catalogus
          type: string
          format: uri
          readOnly: true
        informatieobjecttype:
          title: Informatie object type
          description: URL-referentie naar het INFORMATIEOBJECTTYPE.
          type: string
          format: uri
        informatieobjecttypeOmschrijving:
          title: Informatieobjecttype omschrijving
          type: string
          readOnly: true
        volgnummer:
          title: Volgnummer
          description: Uniek volgnummer van het ZAAK-INFORMATIEOBJECTTYPE binnen het
            ZAAKTYPE.
          type: integer
          maximum: 999
          minimum: 1
        richting:
          title: Richting
          description: 'Aanduiding van de richting van informatieobjecten van het
            gerelateerde INFORMATIEOBJECTTYPE bij zaken van het gerelateerde ZAAKTYPE.


            Uitleg bij mogelijke waarden:


            * `inkomend` - Inkomend

            * `intern` - Intern

            * `uitgaand` - Uitgaand'
          type: string
          enum:
          - inkomend
          - intern
          - uitgaand
        statustype:
          title: Status type
          description: URL-referentie naar het STATUSTYPE waarbij deze INFORMATIEOBJECTTYPEn
            verplicht aanwezig moeten zijn.
          type: string
          format: uri
          nullable: true
    ReferentieProces:
      description: Het Referentieproces dat ten grondslag ligt aan dit ZAAKTYPE.
      required:
      - naam
      type: object
      properties:
        naam:
          title: Referentieprocesnaam
          description: De naam van het Referentieproces.
          type: string
          maxLength: 80
          minLength: 1
        link:
          title: Referentieproceslink
          description: De URL naar de beschrijving van het Referentieproces
          type: string
          format: uri
          maxLength: 200
    BronCatalogus:
      description: De CATALOGUS waaraan het ZAAKTYPE is ontleend.
      required:
      - url
      - domein
      - rsin
      type: object
      properties:
        url:
          title: URL-referentie broncatalogus
          type: string
          format: uri
          maxLength: 200
          minLength: 1
        domein:
          title: Domein
          description: Het domein van de CATALOGUS waaraan het ZAAKTYPE is ontleend.
          type: string
          maxLength: 5
          minLength: 1
        rsin:
          title: Rsin
          description: Het RSIN van de INGESCHREVEN NIET-NATUURLIJK PERSOON die beheerder
            is van de CATALOGUS waaraan het ZAAKTYPE is ontleend.
          type: string
          maxLength: 9
          minLength: 1
    BronZaaktype:
      description: Het zaaktype binnen de CATALOGUS waaraan dit ZAAKTYPE is ontleend.
      required:
      - url
      - identificatie
      - omschrijving
      type: object
      properties:
        url:
          title: URL-referentie bronzaaktype
          type: string
          format: uri
          maxLength: 200
          minLength: 1
        identificatie:
          title: Identificatie
          description: De Zaaktype-identificatie van het bronzaaktype binnen de CATALOGUS.
          type: string
          maxLength: 50
          minLength: 1
        omschrijving:
          title: Omschrijving
          description: De Zaaktype-omschrijving van het bronzaaktype, zoals gehanteerd
            in de Broncatalogus.
          type: string
          maxLength: 80
          minLength: 1
    ZaakTypenRelatie:
      description: De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit ZAAKTYPE.
      required:
      - zaaktype
      - aardRelatie
      type: object
      properties:
        zaaktype:
          title: Zaaktype
          description: URL referentie naar het gerelateerde zaaktype, mogelijks in
            een extern ZTC.
          type: string
          format: uri
          maxLength: 200
          minLength: 1
        aardRelatie:
          title: Aard relatie
          description: 'Omschrijving van de aard van de relatie van zaken van het
            ZAAKTYPE tot zaken van het andere ZAAKTYPE


            Uitleg bij mogelijke waarden:


            * `vervolg` - Vervolg

            * `bijdrage` - Bijdrage

            * `onderwerp` - Onderwerp'
          type: string
          enum:
          - vervolg
          - bijdrage
          - onderwerp
        toelichting:
          title: Toelichting
          description: Een toelichting op de aard van de relatie tussen beide ZAAKTYPEN.
          type: string
          maxLength: 255
    ZaakType:
      required:
      - identificatie
      - omschrijving
      - vertrouwelijkheidaanduiding
      - doel
      - aanleiding
      - indicatieInternOfExtern
      - handelingInitiator
      - onderwerp
      - handelingBehandelaar
      - doorlooptijd
      - opschortingEnAanhoudingMogelijk
      - verlengingMogelijk
      - publicatieIndicatie
      - productenOfDiensten
      - referentieproces
      - verantwoordelijke
      - catalogus
      - besluittypen
      - gerelateerdeZaaktypen
      - beginGeldigheid
      - versiedatum
      type: object
      properties:
        url:
          title: Url
          description: URL-referentie naar dit object. Dit is de unieke identificatie
            en locatie van dit object.
          type: string
          format: uri
          readOnly: true
          maxLength: 1000
          minLength: 1
        identificatie:
          title: Identificatie
          description: Unieke identificatie van het ZAAKTYPE binnen de CATALOGUS waarin
            het ZAAKTYPE voorkomt.
          type: string
          maxLength: 50
          minLength: 1
        omschrijving:
          title: Omschrijving
          description: Omschrijving van de aard van ZAAKen van het ZAAKTYPE.
          type: string
          maxLength: 80
          minLength: 1
        omschrijvingGeneriek:
          title: Omschrijving generiek
          description: Algemeen gehanteerde omschrijving van de aard van ZAAKen van
            het ZAAKTYPE
          type: string
          maxLength: 80
        vertrouwelijkheidaanduiding:
          title: Vertrouwelijkheidaanduiding
          description: 'Aanduiding van de mate waarin zaakdossiers van ZAAKen van
            dit ZAAKTYPE voor de openbaarheid bestemd zijn. Indien de zaak bij het
            aanmaken geen vertrouwelijkheidaanduiding krijgt, dan wordt deze waarde
            gezet.


            Uitleg bij mogelijke waarden:


            * `openbaar` - Openbaar

            * `beperkt_openbaar` - Beperkt openbaar

            * `intern` - Intern

            * `zaakvertrouwelijk` - Zaakvertrouwelijk

            * `vertrouwelijk` - Vertrouwelijk

            * `confidentieel` - Confidentieel

            * `geheim` - Geheim

            * `zeer_geheim` - Zeer geheim'
          type: string
          enum:
          - openbaar
          - beperkt_openbaar
          - intern
          - zaakvertrouwelijk
          - vertrouwelijk
          - confidentieel
          - geheim
          - zeer_geheim
        doel:
          title: Doel
          description: Een omschrijving van hetgeen beoogd is te bereiken met een
            zaak van dit zaaktype.
          type: string
          minLength: 1
        aanleiding:
          title: Aanleiding
          description: Een omschrijving van de gebeurtenis die leidt tot het starten
            van een ZAAK van dit ZAAKTYPE.
          type: string
          minLength: 1
        toelichting:
          title: Toelichting
          description: Een eventuele toelichting op dit zaaktype, zoals een beschrijving
            van het procesverloop op de hoofdlijnen.
          type: string
        indicatieInternOfExtern:
          title: Indicatie intern of extern
          description: "Een aanduiding waarmee onderscheid wordt gemaakt tussen ZAAKTYPEn\
            \ die Intern respectievelijk Extern ge\xEFnitieerd worden. Indien van\
            \ beide sprake kan zijn, dan prevaleert de externe initiatie.\n\nUitleg\
            \ bij mogelijke waarden:\n\n* `inkomend` - Inkomend\n* `intern` - Intern\n\
            * `uitgaand` - Uitgaand"
          type: string
          enum:
          - intern
          - extern
        handelingInitiator:
          title: Handeling initiator
          description: Werkwoord dat hoort bij de handeling die de initiator verricht
            bij dit zaaktype. Meestal 'aanvragen', 'indienen' of 'melden'. Zie ook
            het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_initiator
          type: string
          maxLength: 20
          minLength: 1
        onderwerp:
          title: Onderwerp
          description: 'Het onderwerp van ZAAKen van dit ZAAKTYPE. In veel gevallen
            nauw gerelateerd aan de product- of dienstnaam uit de Producten- en Dienstencatalogus
            (PDC). Bijvoorbeeld: ''Evenementenvergunning'', ''Geboorte'', ''Klacht''.
            Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.onderwerp'
          type: string
          maxLength: 80
          minLength: 1
        handelingBehandelaar:
          title: Handeling behandelaar
          description: Werkwoord dat hoort bij de handeling die de behandelaar verricht
            bij het afdoen van ZAAKen van dit ZAAKTYPE. Meestal 'behandelen', 'uitvoeren',
            'vaststellen' of 'onderhouden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_behandelaar
          type: string
          maxLength: 20
          minLength: 1
        doorlooptijd:
          title: Doorlooptijd
          description: De periode waarbinnen volgens wet- en regelgeving een ZAAK
            van het ZAAKTYPE afgerond dient te zijn, in kalenderdagen.
          type: string
          format: duration
        servicenorm:
          title: Servicenorm
          description: De periode waarbinnen verwacht wordt dat een ZAAK van het ZAAKTYPE
            afgerond wordt conform de geldende servicenormen van de zaakbehandelende
            organisatie(s).
          type: string
          format: duration
          nullable: true
        opschortingEnAanhoudingMogelijk:
          title: Opschorting/aanhouding mogelijk
          description: Aanduiding die aangeeft of ZAAKen van dit mogelijk ZAAKTYPE
            kunnen worden opgeschort en/of aangehouden.
          type: boolean
        verlengingMogelijk:
          title: Verlenging mogelijk
          description: Aanduiding die aangeeft of de Doorlooptijd behandeling van
            ZAAKen van dit ZAAKTYPE kan worden verlengd.
          type: boolean
        verlengingstermijn:
          title: Verlengingstermijn
          description: Een tijdsduur in ISO 8601 formaat waarmee de Doorlooptijd behandeling
            van ZAAKen van dit ZAAKTYPE kan worden verlengd. Mag alleen een waarde
            bevatten als verlenging mogelijk is.
          type: string
          format: duration
          nullable: true
        trefwoorden:
          description: Een trefwoord waarmee ZAAKen van het ZAAKTYPE kunnen worden
            gekarakteriseerd.
          type: array
          items:
            title: Trefwoord
            type: string
            maxLength: 30
            minLength: 1
        publicatieIndicatie:
          title: Publicatie indicatie
          description: Aanduiding of (het starten van) een ZAAK dit ZAAKTYPE gepubliceerd
            moet worden.
          type: boolean
        publicatietekst:
          title: Publicatietekst
          description: De generieke tekst van de publicatie van ZAAKen van dit ZAAKTYPE.
          type: string
        verantwoordingsrelatie:
          description: "De relatie tussen ZAAKen van dit ZAAKTYPE en de beleidsmatige\
            \ en/of financi\xEBle verantwoording."
          type: array
          items:
            title: Verantwoordingsrelatie
            type: string
            maxLength: 40
            minLength: 1
        productenOfDiensten:
          description: Het product of de dienst die door ZAAKen van dit ZAAKTYPE wordt
            voortgebracht.
          type: array
          items:
            title: URL naar product/dienst
            type: string
            format: uri
            maxLength: 1000
            minLength: 1
        selectielijstProcestype:
          title: Selectielijst procestype
          description: URL-referentie naar een vanuit archiveringsoptiek onderkende
            groep processen met dezelfde kenmerken (PROCESTYPE in de Selectielijst
            API).
          type: string
          format: uri
          maxLength: 200
        referentieproces:
          $ref: '#/components/schemas/ReferentieProces'
        verantwoordelijke:
          title: Verantwoordelijke
          description: De (soort) organisatorische eenheid of (functie van) medewerker
            die verantwoordelijk is voor de uitvoering van zaken van het ZAAKTYPE.
          type: string
          maxLength: 50
          minLength: 1
        zaakobjecttypen:
          title: Zaakobjecttypen
          type: string
          readOnly: true
        broncatalogus:
          $ref: '#/components/schemas/BronCatalogus'
        bronzaaktype:
          $ref: '#/components/schemas/BronZaaktype'
        catalogus:
          title: Catalogus
          description: URL-referentie naar de CATALOGUS waartoe dit ZAAKTYPE behoort.
          type: string
          format: uri
        statustypen:
          title: Statustypen
          type: string
          readOnly: true
        resultaattypen:
          title: Resultaattypen
          type: string
          readOnly: true
        eigenschappen:
          title: Eigenschappen
          type: string
          readOnly: true
        informatieobjecttypen:
          description: URL-referenties naar de INFORMATIEOBJECTTYPEN die mogelijk
            zijn binnen dit ZAAKTYPE.
          type: array
          items:
            description: URL-referenties naar de INFORMATIEOBJECTTYPEN die mogelijk
              zijn binnen dit ZAAKTYPE.
            type: string
            format: uri
          readOnly: true
          uniqueItems: true
        roltypen:
          title: Roltypen
          type: string
          readOnly: true
        besluittypen:
          description: URL-referenties naar de BESLUITTYPEN die mogelijk zijn binnen
            dit ZAAKTYPE.
          type: array
          items:
            title: heeft relevante besluittypen
            description: URL-referenties naar de BESLUITTYPEN die mogelijk zijn binnen
              dit ZAAKTYPE.
            type: string
            format: uri
          uniqueItems: true
        deelzaaktypen:
          description: De ZAAKTYPE(n) waaronder ZAAKen als deelzaak kunnen voorkomen
            bij ZAAKen van dit ZAAKTYPE.
          type: array
          items:
            description: De ZAAKTYPE(n) waaronder ZAAKen als deelzaak kunnen voorkomen
              bij ZAAKen van dit ZAAKTYPE.
            type: string
            format: uri
            nullable: true
          uniqueItems: true
        gerelateerdeZaaktypen:
          description: De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit
            ZAAKTYPE.
          type: array
          items:
            $ref: '#/components/schemas/ZaakTypenRelatie'
        beginGeldigheid:
          title: Begin geldigheid
          description: De datum waarop het is ontstaan.
          type: string
          format: date
        eindeGeldigheid:
          title: Einde geldigheid
          description: De datum waarop het is opgeheven.
          type: string
          format: date
          nullable: true
        beginObject:
          title: Begin object
          description: De datum waarop de eerst versie van het object ontstaan is.
          type: string
          format: date
          nullable: true
        eindeObject:
          title: Einde object
          description: De datum van de aller laatste versie van het object.
          type: string
          format: date
          nullable: true
        versiedatum:
          title: Versiedatum
          description: De datum waarop de (gewijzigde) kenmerken van het ZAAKTYPE
            geldig zijn geworden
          type: string
          format: date
        concept:
          title: Concept
          description: Geeft aan of het object een concept betreft. Concepten zijn
            niet-definitieve versies en zouden niet gebruikt moeten worden buiten
            deze API.
          type: boolean
          readOnly: true
