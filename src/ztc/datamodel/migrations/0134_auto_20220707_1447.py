# Generated by Django 2.2.4 on 2022-07-07 14:47

import logging

from django.core.exceptions import ValidationError
from django.db import migrations, models

import vng_api_common.validators
from vng_api_common.utils import generate_unique_identification

logger = logging.getLogger(__name__)


def set_identificatie(zaaktype):
    identificatie = generate_unique_identification(zaaktype, "versiedatum")
    zaaktype.identificatie = identificatie

    try:
        zaaktype.clean()
    except ValidationError:
        logger.info(
            f"Failed generating unique identificatie for {zaaktype}, "
            f"a ZaakType with identificatie {identificatie} already exists."
        )

        set_identificatie(zaaktype)


def update_identificatie(apps, schema_editor):
    ZaakType = apps.get_model("datamodel.ZaakType")

    for zaaktype in ZaakType.objects.all():
        if not zaaktype.identificatie:
            set_identificatie(zaaktype)

            zaaktype.save()


class Migration(migrations.Migration):
    dependencies = [
        ("datamodel", "0133_auto_20220706_1030"),
    ]

    operations = [
        migrations.RunPython(update_identificatie),
        migrations.AlterField(
            model_name="zaaktype",
            name="identificatie",
            field=models.CharField(
                db_index=True,
                help_text="Unieke identificatie van het ZAAKTYPE binnen de CATALOGUS waarin het ZAAKTYPE voorkomt.",
                max_length=50,
                validators=[vng_api_common.validators.AlphanumericExcludingDiacritic()],
                verbose_name="identificatie",
            ),
        ),
    ]
