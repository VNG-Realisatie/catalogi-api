# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-01-17 15:01
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ztc.datamodel.validators
import ztc.utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BesluitType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "besluittype_omschrijving",
                    models.CharField(
                        blank=True,
                        help_text="Omschrijving van de aard van BESLUITen van het BESLUITTYPE.",
                        max_length=80,
                        null=True,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "besluittype_omschrijving_generiek",
                    models.CharField(
                        blank=True,
                        help_text="Algemeen gehanteerde omschrijving van de aard van BESLUITen van het BESLUITTYPE",
                        max_length=80,
                        null=True,
                        verbose_name="omschrijving generiek",
                    ),
                ),
                (
                    "besluitcategorie",
                    models.CharField(
                        blank=True,
                        help_text="Typering van de aard van BESLUITen van het BESLUITTYPE.",
                        max_length=40,
                        null=True,
                        verbose_name="besluitcategorie",
                    ),
                ),
                (
                    "reactietermijn",
                    models.PositiveSmallIntegerField(
                        help_text="Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, waarbinnen verweer tegen een besluit van het besluittype mogelijk is.",
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="reactietermijn",
                    ),
                ),
                (
                    "publicatie_indicatie",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Aanduiding of BESLUITen van dit BESLUITTYPE gepubliceerd moeten worden.",
                        max_length=1,
                        verbose_name="publicatie indicatie",
                    ),
                ),
                (
                    "publicatietekst",
                    models.CharField(
                        blank=True,
                        help_text="De generieke tekst van de publicatie van BESLUITen van dit BESLUITTYPE",
                        max_length=1000,
                        null=True,
                        verbose_name="publicatietekst",
                    ),
                ),
                (
                    "publicatietermijn",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, dat BESLUITen van dit BESLUITTYPE gepubliceerd moeten blijven.",
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="publicatietermijn",
                    ),
                ),
                (
                    "toelichting",
                    models.CharField(
                        blank=True,
                        help_text="Een eventuele toelichting op dit BESLUITTYPE.",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Besluittype",
                "verbose_name_plural": "Besluittypen",
            },
        ),
        migrations.CreateModel(
            name="BronCatalogus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "domein",
                    models.CharField(
                        help_text="Het domein van de CATALOGUS waaraan het ZAAKTYPE is ontleend.",
                        max_length=30,
                        verbose_name="domein",
                    ),
                ),
                (
                    "rsin",
                    models.CharField(
                        help_text="Het RSIN van de INGESCHREVEN NIET-NATUURLIJK PERSOON die beheerder is van de CATALOGUS waaraan het ZAAKTYPE is ontleend.",
                        max_length=9,
                        validators=[django.core.validators.RegexValidator("^[0-9]*$")],
                        verbose_name="rsin",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BronZaakType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "zaaktype_identificatie",
                    models.PositiveIntegerField(
                        help_text="De Zaaktype-identificatie van het bronzaaktype binnen de CATALOGUS.",
                        validators=[django.core.validators.MaxValueValidator(99999)],
                        verbose_name="zaaktype identificatie",
                    ),
                ),
                (
                    "zaaktype_omschrijving",
                    models.CharField(
                        help_text="De Zaaktype-omschrijving van het bronzaaktype, zoals gehanteerd in de Broncatalogus.",
                        max_length=80,
                        verbose_name="zaaktype omschrijving",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Catalogus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "domein",
                    models.CharField(
                        help_text="Een afkorting waarmee wordt aangegeven voor welk domein in een CATALOGUS ZAAKTYPEn zijn uitgewerkt.",
                        max_length=5,
                        validators=[ztc.datamodel.validators.validate_uppercase],
                        verbose_name="domein",
                    ),
                ),
                (
                    "rsin",
                    models.CharField(
                        help_text="Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON die de eigenaar is van een CATALOGUS.",
                        max_length=9,
                        validators=[django.core.validators.validate_integer],
                        verbose_name="rsin",
                    ),
                ),
                (
                    "contactpersoon_beheer_naam",
                    models.CharField(
                        help_text="De naam van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS.",
                        max_length=40,
                        verbose_name="naam",
                    ),
                ),
                (
                    "contactpersoon_beheer_telefoonnummer",
                    models.CharField(
                        blank=True,
                        help_text="Het telefoonnummer van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS.",
                        max_length=20,
                        null=True,
                        verbose_name="telefoonnummer",
                    ),
                ),
                (
                    "contactpersoon_beheer_emailadres",
                    models.EmailField(
                        blank=True,
                        help_text="Het emailadres van de contactpersoon die verantwoordelijk is voor het beheer van de CATALOGUS.",
                        max_length=254,
                        null=True,
                        verbose_name="emailadres",
                    ),
                ),
            ],
            options={
                "verbose_name": "Catalogus",
                "verbose_name_plural": "Catalogussen",
            },
        ),
        migrations.CreateModel(
            name="CheckListItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "itemnaam",
                    models.CharField(
                        help_text="De betekenisvolle benaming van het checklistitem",
                        max_length=30,
                        verbose_name="itemnaam",
                    ),
                ),
                (
                    "vraagstelling",
                    models.CharField(
                        help_text="Een betekenisvolle vraag waaruit blijkt waarop het aandachtspunt gecontroleerd moet worden.",
                        max_length=255,
                        verbose_name="vraagstelling",
                    ),
                ),
                (
                    "verplicht",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Het al dan niet verplicht zijn van controle van het aandachtspunt voorafgaand aan het bereiken van de status van het gerelateerde STATUSTYPE.",
                        max_length=1,
                        verbose_name="verplicht",
                    ),
                ),
                (
                    "toelichting",
                    models.CharField(
                        blank=True,
                        help_text="Beschrijving van de overwegingen bij het controleren van het aandachtspunt",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Eigenschap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "eigenschapnaam",
                    models.CharField(
                        help_text="De naam van de EIGENSCHAP",
                        max_length=20,
                        verbose_name="eigenschapnaam",
                    ),
                ),
                (
                    "definitie",
                    models.CharField(
                        help_text="De beschrijving van de betekenis van deze EIGENSCHAP",
                        max_length=255,
                        verbose_name="definitie",
                    ),
                ),
                (
                    "toelichting",
                    models.TextField(
                        blank=True,
                        help_text="Een toelichting op deze EIGENSCHAP en het belang hiervan voor zaken van dit ZAAKTYPE.",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Eigenschap",
                "verbose_name_plural": "Eigenschappen",
            },
        ),
        migrations.CreateModel(
            name="EigenschapReferentie",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "objecttype",
                    models.CharField(
                        blank=True,
                        help_text="De naam van het objecttype waarbij de eigenschap is gemodelleerd in het informatiemodel waarvan het objecttype deel uit maakt.",
                        max_length=40,
                        null=True,
                        validators=[
                            ztc.datamodel.validators.validate_letters_numbers_underscores_spaces
                        ],
                        verbose_name="objecttype",
                    ),
                ),
                (
                    "informatiemodel",
                    models.CharField(
                        blank=True,
                        help_text="De naam en de versie van het informatiemodel waarin de eigenschap is gemodelleerd.",
                        max_length=80,
                        null=True,
                        validators=[
                            ztc.datamodel.validators.validate_letters_numbers_underscores
                        ],
                        verbose_name="informatiemodel",
                    ),
                ),
                (
                    "namespace",
                    models.CharField(
                        help_text="De naam van het schema waarin de eigenschap is opgenomen.",
                        max_length=200,
                        verbose_name="namespace",
                    ),
                ),
                (
                    "schemalocatie",
                    models.CharField(
                        help_text="De locatie van het XML-schema behorend bij de Namespace",
                        max_length=200,
                        verbose_name="schemalocatie",
                    ),
                ),
                (
                    "x_path_element",
                    models.CharField(
                        blank=True,
                        help_text="De naam van de eigenschap en het pad daarnaar toe in het XML-schema behorend bij de namespace.",
                        max_length=255,
                        null=True,
                        verbose_name="x path element",
                    ),
                ),
                (
                    "entiteittype",
                    models.CharField(
                        help_text="De naam van de XML-constructie in het XML-schema behorend bij de namespace die afgeleid is van de naam van het objecttype en waarin de eigenschap is opgenomen.",
                        max_length=80,
                        verbose_name="entiteittype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Eigenschap referentie",
                "verbose_name_plural": "Eigenschap referenties",
            },
        ),
        migrations.CreateModel(
            name="EigenschapSpecificatie",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "groep",
                    models.CharField(
                        blank=True,
                        help_text="Benaming van het object of groepattribuut waarvan de EIGENSCHAP een inhoudelijk gegeven specificeert.",
                        max_length=32,
                        null=True,
                        validators=[
                            ztc.datamodel.validators.validate_letters_numbers_underscores
                        ],
                        verbose_name="groep",
                    ),
                ),
                (
                    "formaat",
                    models.CharField(
                        choices=[
                            ("tekst", "tekst"),
                            ("getal", "getal"),
                            ("datum (jjjjmmdd)", "datum"),
                            ("datum/tijd (jjjjmmdduummss)", "datum/tijd"),
                        ],
                        help_text="Het soort tekens waarmee waarden van de EIGENSCHAP kunnen worden vastgelegd.",
                        max_length=20,
                        verbose_name="formaat",
                    ),
                ),
                (
                    "lengte",
                    models.CharField(
                        help_text="Het aantal karakters (lengte) waarmee waarden van de EIGENSCHAP worden vastgelegd.",
                        max_length=14,
                        verbose_name="lengte",
                    ),
                ),
                (
                    "kardinaliteit",
                    models.CharField(
                        help_text="Het aantal mogelijke voorkomens van waarden van deze EIGENSCHAP bij een zaak van het ZAAKTYPE.",
                        max_length=3,
                        validators=[ztc.datamodel.validators.KardinaliteitValidator()],
                        verbose_name="kardinaliteit",
                    ),
                ),
                (
                    "waardenverzameling",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Een waarde die deze EIGENSCHAP kan hebben.",
                            max_length=100,
                            verbose_name="waardenverzameling",
                        ),
                        size=None,
                    ),
                ),
            ],
            options={
                "verbose_name": "Eigenschap specificatie",
                "verbose_name_plural": "Eigenschap specificaties",
            },
        ),
        migrations.CreateModel(
            name="Formulier",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "naam",
                    models.CharField(
                        help_text="De naam van het formulier.",
                        max_length=80,
                        verbose_name="naam",
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="De URL naar het formulier.",
                        null=True,
                        verbose_name="link",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InformatieObjectType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "informatieobjecttype_omschrijving",
                    models.CharField(
                        help_text="Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.",
                        max_length=80,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "informatieobjectcategorie",
                    models.CharField(
                        help_text="Typering van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.",
                        max_length=80,
                        verbose_name="categorie",
                    ),
                ),
                (
                    "informatieobjecttypetrefwoord",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Trefwoord(en) waarmee informatieobjecten van het INFORMATIEOBJECTTYPE kunnen worden gekarakteriseerd.",
                            max_length=30,
                            verbose_name="trefwoord",
                        ),
                        size=None,
                    ),
                ),
                (
                    "vertrouwelijkheidaanduiding",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ZEER GEHEIM", "zeer geheim"),
                            ("GEHEIM", "geheim"),
                            ("CONFIDENTIEEL", "confidentieel"),
                            ("VERTROUWELIJK", "vertrouwelijk"),
                            ("ZAAKVERTROUWELIJK", "zaakvertrouwelijk"),
                            ("INTERN", "intern"),
                            ("BEPERKT OPENBAAR", "beperkt openbaar"),
                            ("OPENBAAR", "openbaar"),
                        ],
                        help_text="Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.",
                        max_length=20,
                        null=True,
                        verbose_name="vertrouwelijkheidaanduiding",
                    ),
                ),
                (
                    "model",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.URLField(
                            help_text="De URL naar het model / sjabloon dat wordt gebruikt voor de creatie van informatieobjecten van dit INFORMATIEOBJECTTYPE.",
                            verbose_name="model",
                        ),
                        size=None,
                    ),
                ),
                (
                    "toelichting",
                    models.TextField(
                        blank=True,
                        help_text="Een eventuele toelichting op dit INFORMATIEOBJECTTYPE.",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Informatieobjecttype",
                "verbose_name_plural": "Informatieobjecttypen",
            },
        ),
        migrations.CreateModel(
            name="InformatieObjectTypeOmschrijvingGeneriek",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "informatieobjecttype_omschrijving_generiek",
                    models.CharField(
                        help_text="Algemeen gehanteerde omschrijving van het type informatieobject.",
                        max_length=80,
                        verbose_name="informatieobjecttype omschrijving generiek",
                    ),
                ),
                (
                    "definitie_informatieobjecttype_omschrijving_generiek",
                    models.CharField(
                        help_text="Nauwkeurige beschrijving van het generieke type informatieobject",
                        max_length=255,
                        verbose_name="definitie",
                    ),
                ),
                (
                    "herkomst_informatieobjecttype_omschrijving_generiek",
                    models.CharField(
                        help_text="De naam van de waardenverzameling, of van de beherende organisatie daarvan, waaruit de waarde is overgenomen.",
                        max_length=12,
                        verbose_name="herkomst",
                    ),
                ),
                (
                    "hierarchie_informatieobjecttype_omschrijving_generiek",
                    models.CharField(
                        help_text="De plaats in de rangorde van het informatieobjecttype.",
                        max_length=80,
                        verbose_name="hierarchie",
                    ),
                ),
                (
                    "opmerking_informatieobjecttype_omschrijving_generiek",
                    models.CharField(
                        blank=True,
                        help_text="Zinvolle toelichting bij het informatieobjecttype",
                        max_length=255,
                        null=True,
                        verbose_name="opmerking",
                    ),
                ),
            ],
            options={
                "verbose_name": "Generieke informatieobjecttype-omschrijving",
                "verbose_name_plural": "Generieke informatieobjecttype-omschrijvingen",
            },
        ),
        migrations.CreateModel(
            name="ProductDienst",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "naam",
                    models.CharField(
                        help_text="De naam van het product of de dienst.",
                        max_length=80,
                        verbose_name="naam",
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="De URL naar de beschrijving van het product of de dienst.",
                        null=True,
                        verbose_name="link",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReferentieProces",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "naam",
                    models.CharField(
                        help_text="De naam van het Referentieproces.",
                        max_length=80,
                        verbose_name="naam",
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="De URL naar de beschrijving van het Referentieproces",
                        null=True,
                        verbose_name="link",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResultaatType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "resultaattypeomschrijving",
                    models.CharField(
                        help_text="Omschrijving van de aard van resultaten van het RESULTAATTYPE.",
                        max_length=20,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "resultaattypeomschrijving_generiek",
                    models.CharField(
                        help_text="Algemeen gehanteerde omschrijving van de aard van resultaten van het RESULTAATTYPE.",
                        max_length=20,
                        verbose_name="omschrijving generiek",
                    ),
                ),
                (
                    "selectielijstklasse",
                    models.CharField(
                        blank=True,
                        help_text="Verwijzing naar de, voor het archiefregime bij het RESULTAATTYPE relevante, passage in de Selectielijst Archiefbescheiden van de voor het ZAAKTYPE verantwoordelijke overheidsorganisatie.",
                        max_length=500,
                        null=True,
                        verbose_name="selectielijstklasse",
                    ),
                ),
                (
                    "archiefnominatie",
                    models.CharField(
                        choices=[
                            ("Blijvend bewaren", "blijvend bewaren"),
                            ("vernietigen", "vernietigen"),
                        ],
                        help_text="Aanduiding die aangeeft of ZAAKen met een resultaat van dit RESULTAATTYPE blijvend moeten worden bewaard of (op termijn) moeten worden vernietigd .",
                        max_length=16,
                        verbose_name="archiefnominatie",
                    ),
                ),
                (
                    "archiefactietermijn",
                    models.PositiveSmallIntegerField(
                        help_text="De termijn waarna het zaakdossier (de ZAAK met alle bijbehorende INFORMATIEOBJECTen) van een ZAAK met een resultaat van dit RESULTAATTYPE vernietigd of overgebracht (naar een archiefbewaarplaats) moet worden.",
                        validators=[django.core.validators.MaxValueValidator(9999)],
                        verbose_name="archiefactietermijn",
                    ),
                ),
                (
                    "brondatum_archiefprocedure",
                    models.CharField(
                        choices=[
                            ("afgehandeld", "afgehandeld"),
                            ("ingangsdatum besluit", "ingangsdatum besluit"),
                            ("vervaldatum besluit", "vervaldatum besluit"),
                            ("eigenschap", "eigenschap"),
                            ("ander datumkenmerk", "ander datumkenmerk"),
                        ],
                        help_text="Aanduiding van de brondatum voor de start van de Archiefactietermijn van het zaakdossier.",
                        max_length=20,
                        verbose_name="brondatum archiefprocedure",
                    ),
                ),
                (
                    "toelichting",
                    models.CharField(
                        blank=True,
                        help_text="Een toelichting op dit RESULTAATTYPE en het belang hiervan voor ZAAKen waarin een Resultaat van dit RESULTAATTYPE wordt geselecteerd.",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RolType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "roltypeomschrijving",
                    models.CharField(
                        help_text="Omschrijving van de aard van de ROL.",
                        max_length=20,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "roltypeomschrijving_generiek",
                    models.CharField(
                        choices=[
                            ("Adviseur", "adviseur"),
                            ("Behandelaar", "behandelaar"),
                            ("Belanghebbende", "belanghebbende"),
                            ("Beslisser", "beslisser"),
                            ("Initiator", "initiator"),
                            ("Klantcontacter", "klantcontacter"),
                            ("Zaakcoördinator", "zaakcoördinator"),
                        ],
                        help_text="Algemeen gehanteerde omschrijving van de aard van de ROL.",
                        max_length=20,
                        verbose_name="omschrijving generiek",
                    ),
                ),
                (
                    "soort_betrokkene",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="De (soort) betrokkene die een rol van dit roltype mag uitoefenen.",
                            max_length=80,
                            verbose_name="soort betrokkene",
                        ),
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StatusType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "statustype_omschrijving",
                    models.CharField(
                        help_text="Een korte, voor de initiator van de zaak relevante, omschrijving van de aard van de STATUS van zaken van een ZAAKTYPE.",
                        max_length=80,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "statustype_omschrijving_generiek",
                    models.CharField(
                        blank=True,
                        help_text="Algemeen gehanteerde omschrijving van de aard van STATUSsen van het STATUSTYPE",
                        max_length=80,
                        null=True,
                        verbose_name="omschrijving generiek",
                    ),
                ),
                (
                    "statustypevolgnummer",
                    models.PositiveSmallIntegerField(
                        help_text="Een volgnummer voor statussen van het STATUSTYPE binnen een zaak.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(9999),
                        ],
                        verbose_name="statustypevolgnummer",
                    ),
                ),
                (
                    "doorlooptijd_status",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="De door de zaakbehandelende organisatie(s) gestelde norm voor de doorlooptijd voor het bereiken van statussen van dit STATUSTYPE bij het desbetreffende ZAAKTYPE, vanaf het bereiken van de voorafgaande status",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ],
                        verbose_name="doorlooptijd status",
                    ),
                ),
                (
                    "informeren",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Aanduiding die aangeeft of na het zetten van een STATUS van dit STATUSTYPE de Initiator moet worden geïnformeerd over de statusovergang.",
                        max_length=1,
                        verbose_name="informeren",
                    ),
                ),
                (
                    "statustekst",
                    models.CharField(
                        blank=True,
                        help_text="De tekst die wordt gebruikt om de Initiator te informeren over het bereiken van een STATUS van dit STATUSTYPE bij het desbetreffende ZAAKTYPE.",
                        max_length=1000,
                        null=True,
                        verbose_name="statustekst",
                    ),
                ),
                (
                    "toelichting",
                    models.CharField(
                        blank=True,
                        help_text="Een eventuele toelichting op dit STATUSTYPE.",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
                (
                    "checklistitem",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Te controleren aandachtspunt voorafgaand aan het bereiken van een status van het STATUSTYPE.",
                        to="datamodel.CheckListItem",
                        verbose_name="checklistitem",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZaakInformatieobjectType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "volgnummer",
                    models.IntegerField(
                        help_text="Uniek volgnummer van het ZAAK-INFORMATIEOBJECT-TYPE binnen het ZAAKTYPE.",
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="volgnummer",
                    ),
                ),
                (
                    "richting",
                    models.CharField(
                        choices=[
                            ("Inkomend", "Inkomend"),
                            ("Intern", "Intern"),
                            ("Uitgaand", "Uitgaand"),
                        ],
                        help_text="Aanduiding van de richting van informatieobjecten van het gerelateerde INFORMATIEOBJECTTYPE bij zaken van het gerelateerde ZAAKTYPE.",
                        max_length=20,
                        verbose_name="richting",
                    ),
                ),
                (
                    "informatie_object_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datamodel.InformatieObjectType",
                        verbose_name="informatie object type",
                    ),
                ),
                (
                    "status_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="De informatieobjecten van de INFORMATIEOBJECTTYPEn van het aan het STATUSTYPE gerelateerde ZAAKTYPE waarvoor geldt dat deze verplicht aanwezig moeten zijn bij een zaak van het gerelateerde ZAAKTYPE voordat de status van dit STATUSTYPE kan worden gezet bij die zaak.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="heeft_verplichte_zit",
                        to="datamodel.StatusType",
                        verbose_name="status type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZaakInformatieobjectTypeArchiefregime",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "selectielijstklasse",
                    models.CharField(
                        blank=True,
                        help_text="Verwijzing naar de voor het ZAAKINFORMATIEOBJECTTYPE bij het RESULTAATTYPE relevante passage in de Selectielijst Archiefbescheiden van de voor het ZAAKTYPE verantwoordelijke overheidsorganisatie.",
                        max_length=500,
                        null=True,
                        verbose_name="selectielijstklasse",
                    ),
                ),
                (
                    "archiefnominatie",
                    models.CharField(
                        choices=[
                            ("Blijvend bewaren", "Blijvend bewaren"),
                            ("Vernietigen", "Vernietigen"),
                        ],
                        help_text="Aanduiding die aangeeft of informatieobjecten, van het INFORMATIEOBJECTTYPE bij zaken van het ZAAKTYPE met een resultaat van het RESULTAATTYPE, blijvend moeten worden bewaard of (op termijn) moeten worden vernietigd.",
                        max_length=16,
                        verbose_name="archiefnominatie",
                    ),
                ),
                (
                    "archiefactietermijn",
                    models.PositiveSmallIntegerField(
                        help_text="De termijn waarna informatieobjecten, van het INFORMATIEOBJECTTYPE bij zaken van het ZAAKTYPE met een resultaat van het RESULTAATTYPE, vernietigd of overgebracht (naar een archiefbewaarplaats) moeten worden.",
                        validators=[django.core.validators.MaxValueValidator(9999)],
                        verbose_name="archiefactietermijn",
                    ),
                ),
                (
                    "resultaattype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datamodel.ResultaatType",
                        verbose_name="resultaattype",
                    ),
                ),
                (
                    "zaak_informatieobject_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datamodel.ZaakInformatieobjectType",
                        verbose_name="zaakinformatie object type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZaakObjectType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "objecttype",
                    models.CharField(
                        help_text="De naam van het objecttype waarop zaken van het gerelateerde ZAAKTYPE betrekking hebben.",
                        max_length=50,
                        verbose_name="objecttype",
                    ),
                ),
                (
                    "ander_objecttype",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Aanduiding waarmee wordt aangegeven of het ZAAKOBJECTTYPE een ander, niet in RSGB en RGBZ voorkomend, objecttype betreft",
                        max_length=1,
                        verbose_name="ander objecttype",
                    ),
                ),
                (
                    "relatieomschrijving",
                    models.CharField(
                        help_text="Omschrijving van de betrekking van het Objecttype op zaken van het gerelateerde ZAAKTYPE.",
                        max_length=80,
                        verbose_name="relatieomschrijving",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZaakType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datum_begin_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        help_text="De datum waarop het is ontstaan.",
                        max_length=9,
                        verbose_name="datum begin geldigheid",
                    ),
                ),
                (
                    "datum_einde_geldigheid",
                    ztc.utils.fields.StUFDateField(
                        blank=True,
                        help_text="De datum waarop het is opgeheven.",
                        max_length=9,
                        null=True,
                        verbose_name="datum einde geldigheid",
                    ),
                ),
                (
                    "zaaktype_identificatie",
                    models.PositiveIntegerField(
                        help_text="Unieke identificatie van het ZAAKTYPE binnen de CATALOGUS waarin het ZAAKTYPE voorkomt.",
                        validators=[django.core.validators.MaxValueValidator(99999)],
                        verbose_name="identificatie",
                    ),
                ),
                (
                    "zaaktype_omschrijving",
                    models.CharField(
                        help_text="Omschrijving van de aard van ZAAKen van het ZAAKTYPE.",
                        max_length=80,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "zaaktype_omschrijving_generiek",
                    models.CharField(
                        blank=True,
                        help_text="Algemeen gehanteerde omschrijving van de aard van ZAAKen van het ZAAKTYPE",
                        max_length=80,
                        null=True,
                        verbose_name="omschrijving generiek",
                    ),
                ),
                (
                    "zaakcategorie",
                    models.CharField(
                        blank=True,
                        help_text="Typering van de aard van ZAAKen van het ZAAKTYPE.",
                        max_length=40,
                        null=True,
                        verbose_name="zaakcategorie",
                    ),
                ),
                (
                    "doel",
                    models.CharField(
                        help_text="Een omschrijving van hetgeen beoogd is te bereiken met een zaak van dit zaaktype.",
                        max_length=1000,
                        verbose_name="doel",
                    ),
                ),
                (
                    "aanleiding",
                    models.CharField(
                        help_text="Een omschrijving van de gebeurtenis die leidt tot het starten van een ZAAK van dit ZAAKTYPE.",
                        max_length=1000,
                        verbose_name="aanleiding",
                    ),
                ),
                (
                    "toelichting",
                    models.CharField(
                        blank=True,
                        help_text="Een eventuele toelichting op dit zaaktype.",
                        max_length=1000,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
                (
                    "indicatie_intern_of_extern",
                    models.CharField(
                        choices=[("Intern", "intern"), ("Extern", "extern")],
                        help_text="Een aanduiding waarmee onderscheid wordt gemaakt tussen ZAAKTYPEn die Intern respectievelijk Extern geïnitieerd worden.",
                        max_length=6,
                        verbose_name="indicatie intern of extern",
                    ),
                ),
                (
                    "handeling_initiator",
                    models.CharField(
                        help_text="Werkwoord dat hoort bij de handeling die de initiator verricht bij dit zaaktype. Meestal 'aanvragen', 'indienen' of 'melden'.",
                        max_length=20,
                        verbose_name="handeling initiator",
                    ),
                ),
                (
                    "onderwerp",
                    models.CharField(
                        help_text="Het onderwerp van ZAAKen van dit ZAAKTYPE. In veel gevallen nauw gerelateerd aan de product- of dienstnaam uit de Producten- en Dienstencatalogus (PDC). Bijvoorbeeld: 'Evenementenvergunning', 'Geboorte', 'Klacht'.",
                        max_length=80,
                        verbose_name="onderwerp",
                    ),
                ),
                (
                    "handeling_behandelaar",
                    models.CharField(
                        help_text="Werkwoord dat hoort bij de handeling die de behandelaar verricht bij het afdoen van ZAAKen van dit ZAAKTYPE. Meestal 'behandelen', 'uitvoeren', 'vaststellen' of 'onderhouden'.",
                        max_length=20,
                        verbose_name="handeling behandelaar",
                    ),
                ),
                (
                    "doorlooptijd_behandeling",
                    models.PositiveSmallIntegerField(
                        help_text="De periode waarbinnen volgens wet- en regelgeving een ZAAK van het ZAAKTYPE afgerond dient te zijn.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ],
                        verbose_name="doorlooptijd behandeling",
                    ),
                ),
                (
                    "servicenorm_behandeling",
                    models.IntegerField(
                        blank=True,
                        help_text="De periode waarbinnen verwacht wordt dat een ZAAK van het ZAAKTYPE afgerond wordt conform de geldende servicenormen van de zaakbehandelende organisatie(s).",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ],
                        verbose_name="servicenorm behandeling",
                    ),
                ),
                (
                    "opschorting_aanhouding_mogelijk",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Aanduiding die aangeeft of ZAAKen van dit mogelijk ZAAKTYPE kunnen worden opgeschort en/of aangehouden.",
                        max_length=1,
                        verbose_name="opschorting/aanhouding mogelijk",
                    ),
                ),
                (
                    "verlenging_mogelijk",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Aanduiding die aangeeft of de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd.",
                        max_length=1,
                        verbose_name="verlenging mogelijk",
                    ),
                ),
                (
                    "verlengingstermijn",
                    models.PositiveSmallIntegerField(
                        help_text="De termijn in dagen waarmee de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd.",
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="verlengingstermijn",
                    ),
                ),
                (
                    "trefwoord",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Een trefwoord waarmee ZAAKen van het ZAAKTYPE kunnen worden gekarakteriseerd.",
                            max_length=30,
                            verbose_name="trefwoord",
                        ),
                        size=None,
                    ),
                ),
                (
                    "archiefclassificatiecode",
                    models.CharField(
                        blank=True,
                        help_text="De systematische identificatie van zaakdossiers van dit ZAAKTYPE overeenkomstig logisch gestructureerde conventies, methoden en procedureregels.",
                        max_length=20,
                        null=True,
                        verbose_name="archiefclassificatiecode",
                    ),
                ),
                (
                    "vertrouwelijkheidaanduiding",
                    models.CharField(
                        choices=[
                            ("ZEER GEHEIM", "zeer geheim"),
                            ("GEHEIM", "geheim"),
                            ("CONFIDENTIEEL", "confidentieel"),
                            ("VERTROUWELIJK", "vertrouwelijk"),
                            ("ZAAKVERTROUWELIJK", "zaakvertrouwelijk"),
                            ("INTERN", "intern"),
                            ("BEPERKT OPENBAAR", "beperkt openbaar"),
                            ("OPENBAAR", "openbaar"),
                        ],
                        help_text="Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn.",
                        max_length=20,
                        verbose_name="vertrouwelijkheidaanduiding",
                    ),
                ),
                (
                    "verantwoordelijke",
                    models.CharField(
                        help_text="De (soort) organisatorische eenheid of (functie van) medewerker die verantwoordelijk is voor de uitvoering van zaken van het ZAAKTYPE.",
                        max_length=50,
                        verbose_name="verantwoordelijke",
                    ),
                ),
                (
                    "publicatie_indicatie",
                    models.CharField(
                        choices=[("J", "Ja"), ("N", "Nee")],
                        help_text="Aanduiding of (het starten van) een ZAAK van AN1 dit ZAAKTYPE gepubliceerd moet worden.",
                        max_length=1,
                        verbose_name="publicatie indicatie",
                    ),
                ),
                (
                    "publicatietekst",
                    models.CharField(
                        blank=True,
                        help_text="De generieke tekst van de publicatie van ZAAKen van dit ZAAKTYPE.",
                        max_length=1000,
                        null=True,
                        verbose_name="publicatietekst",
                    ),
                ),
                (
                    "verantwoordingsrelatie",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            blank=True,
                            help_text="De relatie tussen ZAAKen van dit ZAAKTYPE en de beleidsmatige en/of financiële verantwoording.",
                            max_length=40,
                            null=True,
                            verbose_name="verantwoordingsrelatie",
                        ),
                        size=None,
                    ),
                ),
                (
                    "versiedatum",
                    ztc.utils.fields.DatumField(
                        help_text="De datum waarop de (gewijzigde) kenmerken van het ZAAKTYPE geldig zijn geworden",
                        max_length=8,
                        verbose_name="versiedatum",
                    ),
                ),
                (
                    "broncatalogus",
                    models.ForeignKey(
                        blank=True,
                        help_text="De CATALOGUS waaraan het ZAAKTYPE is ontleend.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datamodel.BronCatalogus",
                        verbose_name="broncatalogus",
                    ),
                ),
                (
                    "bronzaaktype",
                    models.ForeignKey(
                        blank=True,
                        help_text="Het zaaktype binnen de CATALOGUS waaraan dit ZAAKTYPE is ontleend.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datamodel.BronZaakType",
                        verbose_name="bronzaaktype",
                    ),
                ),
                (
                    "formulier",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Formulier Het formulier dat ZAAKen van dit ZAAKTYPE initieert.",
                        to="datamodel.Formulier",
                        verbose_name="formulier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZaakTypenRelatie",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "aard_relatie",
                    models.CharField(
                        choices=[
                            ("vervolg", "vervolg"),
                            ("bijdrage", "bijdrage"),
                            ("onderwerp", "onderwerp"),
                        ],
                        help_text="Omschrijving van de aard van de relatie van zaken van het ZAAKTYPE tot zaken van het andere ZAAKTYPE",
                        max_length=15,
                        verbose_name="aard relatie",
                    ),
                ),
                (
                    "toelichting",
                    models.CharField(
                        blank=True,
                        help_text="Een toelichting op de aard van de relatie tussen beide ZAAKTYPEN.",
                        max_length=255,
                        null=True,
                        verbose_name="toelichting",
                    ),
                ),
                (
                    "zaaktype_naar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zaaktypenrelatie_naar",
                        to="datamodel.ZaakType",
                        verbose_name="zaaktype naar",
                    ),
                ),
                (
                    "zaaktype_van",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zaaktypenrelatie_van",
                        to="datamodel.ZaakType",
                        verbose_name="zaaktype van",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="zaaktype",
            name="heeft_gerelateerd",
            field=models.ManyToManyField(
                blank=True,
                help_text="De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit ZAAKTYPE.",
                related_name="zaak_typen_heeft_gerelateerd",
                through="datamodel.ZaakTypenRelatie",
                to="datamodel.ZaakType",
                verbose_name="heeft gerelateerd",
            ),
        ),
        migrations.AddField(
            model_name="zaaktype",
            name="is_deelzaaktype_van",
            field=models.ManyToManyField(
                blank=True,
                help_text="De ZAAKTYPEn (van de hoofdzaken) waaronder ZAAKen van dit ZAAKTYPE als deelzaak kunnen voorkomen.",
                related_name="zaak_typen_is_deelzaaktype_van",
                to="datamodel.ZaakType",
                verbose_name="is deelzaaktype van",
            ),
        ),
        migrations.AddField(
            model_name="zaaktype",
            name="maakt_deel_uit_van",
            field=models.ForeignKey(
                help_text="De CATALOGUS waartoe dit ZAAKTYPE behoort.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.Catalogus",
                verbose_name="maakt deel uit van",
            ),
        ),
        migrations.AddField(
            model_name="zaaktype",
            name="product_dienst",
            field=models.ManyToManyField(
                help_text="Het product of de dienst die door ZAAKen van dit ZAAKTYPE wordt voortgebracht.",
                to="datamodel.ProductDienst",
                verbose_name="product/dienst",
            ),
        ),
        migrations.AddField(
            model_name="zaaktype",
            name="referentieproces",
            field=models.ForeignKey(
                help_text="Verwijzing naar een gelijknamig groepattribuutsoort.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ReferentieProces",
                verbose_name="referentieproces",
            ),
        ),
        migrations.AddField(
            model_name="zaakobjecttype",
            name="is_relevant_voor",
            field=models.ForeignKey(
                help_text="Zaken van het ZAAKTYPE waarvoor objecten van dit ZAAKOBJECTTYPE relevant zijn.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ZaakType",
                verbose_name="is_relevant_voor",
            ),
        ),
        migrations.AddField(
            model_name="zaakobjecttype",
            name="status_type",
            field=models.ForeignKey(
                blank=True,
                help_text="TODO: dit is de related helptext: De ZAAKOBJECTTYPEn die verplicht gerelateerd moeten zijn aan ZAAKen van het ZAAKTYPE voordat een STATUS van dit STATUSTYPE kan worden gezet",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="heeft_verplichte_zaakobjecttype",
                to="datamodel.StatusType",
                verbose_name="status type",
            ),
        ),
        migrations.AddField(
            model_name="zaakinformatieobjecttype",
            name="zaaktype",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ZaakType",
                verbose_name="zaaktype",
            ),
        ),
        migrations.AddField(
            model_name="statustype",
            name="is_van",
            field=models.ForeignKey(
                help_text="Het ZAAKTYPE van ZAAKen waarin STATUSsen van dit STATUSTYPE bereikt kunnen worden.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ZaakType",
                verbose_name="is van",
            ),
        ),
        migrations.AddField(
            model_name="statustype",
            name="roltypen",
            field=models.ManyToManyField(
                help_text="De STATUSTYPEn die een betrokkene in een rol van dit ROLTYPE mag zetten.",
                related_name="mag_zetten",
                to="datamodel.RolType",
                verbose_name="roltypen",
            ),
        ),
        migrations.AddField(
            model_name="roltype",
            name="is_van",
            field=models.ForeignKey(
                help_text="De ROLTYPEn waarin BETROKKENEn een ROL kunnen uitoefenen in ZAAKen van dit ZAAKTYPE.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ZaakType",
                verbose_name="is van",
            ),
        ),
        migrations.AddField(
            model_name="resultaattype",
            name="bepaalt_afwijkend_archiefregime_van",
            field=models.ManyToManyField(
                blank=True,
                help_text="Informatieobjecten van een ZAAKINFORMATIEOBJECTTYPE bij zaken van een ZAAKTYPE waarvan, op grond van resultaten van een RESULTAATTYPE bij dat ZAAKTYPE, de archiveringskenmerken afwijken van de archiveringskenmerken van het ZAAKTYPE.",
                related_name="resultaattypes",
                through="datamodel.ZaakInformatieobjectTypeArchiefregime",
                to="datamodel.ZaakInformatieobjectType",
                verbose_name="bepaalt afwijkend archiefregime van",
            ),
        ),
        migrations.AddField(
            model_name="resultaattype",
            name="heeft_verplichte_ziot",
            field=models.ManyToManyField(
                blank=True,
                help_text="De INFORMATIEOBJECTTYPEn die verplicht aanwezig moeten zijn in het zaakdossier van ZAAKen van dit ZAAKTYPE voordat een resultaat van dit RESULTAATTYPE kan worden gezet.",
                related_name="resultaattypen",
                to="datamodel.ZaakInformatieobjectType",
                verbose_name="heeft verplichte zaakinformatie objecttype",
            ),
        ),
        migrations.AddField(
            model_name="resultaattype",
            name="heeft_verplichte_zot",
            field=models.ManyToManyField(
                blank=True,
                help_text="De ZAAKOBJECTTYPEn die verplicht gerelateerd moeten zijn aan ZAAKen van dit ZAAKTYPE voordat een resultaat van dit RESULTAATTYPE kan worden gezet.",
                to="datamodel.ZaakObjectType",
                verbose_name="heeft verplichte",
            ),
        ),
        migrations.AddField(
            model_name="resultaattype",
            name="heeft_voor_brondatum_archiefprocedure_relevante",
            field=models.ForeignKey(
                blank=True,
                help_text="De EIGENSCHAP die bepalend is voor het moment waarop de Archiefactietermijn start voor een ZAAK met een resultaat van dit RESULTAATTYPE.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.Eigenschap",
                verbose_name="heeft voor brondatum archiefprocedure relevante",
            ),
        ),
        migrations.AddField(
            model_name="resultaattype",
            name="is_relevant_voor",
            field=models.ForeignKey(
                help_text="Het ZAAKTYPE van ZAAKen waarin resultaten van dit RESULTAATTYPE bereikt kunnen worden.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ZaakType",
                verbose_name="is relevant voor",
            ),
        ),
        migrations.AddField(
            model_name="informatieobjecttype",
            name="informatieobjecttype_omschrijving_generiek",
            field=models.ForeignKey(
                blank=True,
                help_text="Algemeen gehanteerde omschrijving van het INFORMATIEOBJECTTYPE.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.InformatieObjectTypeOmschrijvingGeneriek",
                verbose_name="omschrijving generiek",
            ),
        ),
        migrations.AddField(
            model_name="informatieobjecttype",
            name="maakt_deel_uit_van",
            field=models.ForeignKey(
                help_text="De CATALOGUS waartoe dit INFORMATIEOBJECTTYPE behoort.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.Catalogus",
                verbose_name="maakt deel uit van",
            ),
        ),
        migrations.AddField(
            model_name="informatieobjecttype",
            name="zaaktypes",
            field=models.ManyToManyField(
                help_text="ZAAKTYPE met ZAAKen die relevant kunnen zijn voor dit INFORMATIEOBJECTTYPE",
                related_name="heeft_relevant_informatieobjecttype",
                through="datamodel.ZaakInformatieobjectType",
                to="datamodel.ZaakType",
                verbose_name="zaaktypes",
            ),
        ),
        migrations.AddField(
            model_name="eigenschap",
            name="is_van",
            field=models.ForeignKey(
                help_text="Het ZAAKTYPE van de ZAAKen waarvoor deze EIGENSCHAP van belang is.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.ZaakType",
                verbose_name="is van",
            ),
        ),
        migrations.AddField(
            model_name="eigenschap",
            name="referentie_naar_eigenschap",
            field=models.ForeignKey(
                blank=True,
                help_text="Verwijzing naar de standaard waarin de eigenschap is gespecificeerd",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.EigenschapReferentie",
                verbose_name="referentie naar eigenschap",
            ),
        ),
        migrations.AddField(
            model_name="eigenschap",
            name="specificatie_van_eigenschap",
            field=models.ForeignKey(
                blank=True,
                help_text="Attribuutkenmerken van de eigenschap",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.EigenschapSpecificatie",
                verbose_name="specificatie van eigenschap",
            ),
        ),
        migrations.AddField(
            model_name="eigenschap",
            name="status_type",
            field=models.ForeignKey(
                blank=True,
                help_text="Status type moet (onder andere) deze EIGENSCHAP hebben, voordat een STATUS van het STATUSTYPE kan worden gezet.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="heeft_verplichte_eigenschap",
                to="datamodel.StatusType",
                verbose_name="status type",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="catalogus", unique_together=set([("domein", "rsin")])
        ),
        migrations.AddField(
            model_name="besluittype",
            name="is_resultaat_van",
            field=models.ManyToManyField(
                help_text="(inverse van:) Het BESLUITTYPE van besluiten die gepaard gaan met resultaten van het RESULTAATTYPE.",
                related_name="leidt_tot",
                to="datamodel.ResultaatType",
                verbose_name="is resultaat van",
            ),
        ),
        migrations.AddField(
            model_name="besluittype",
            name="maakt_deel_uit_van",
            field=models.ForeignKey(
                help_text="De CATALOGUS waartoe dit BESLUITTYPE behoort.",
                on_delete=django.db.models.deletion.CASCADE,
                to="datamodel.Catalogus",
                verbose_name="catalogus",
            ),
        ),
        migrations.AddField(
            model_name="besluittype",
            name="wordt_vastgelegd_in",
            field=models.ManyToManyField(
                blank=True,
                help_text="Het INFORMATIEOBJECTTYPE van informatieobjecten waarin besluiten van dit BESLUITTYPE worden vastgelegd.",
                to="datamodel.InformatieObjectType",
                verbose_name="informatieobjecttype",
            ),
        ),
        migrations.AddField(
            model_name="besluittype",
            name="zaaktypes",
            field=models.ManyToManyField(
                help_text="ZAAKTYPE met ZAAKen die relevant kunnen zijn voor dit BESLUITTYPE",
                related_name="heeft_relevant_besluittype",
                to="datamodel.ZaakType",
                verbose_name="zaaktypes",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="zaaktype",
            unique_together=set([("maakt_deel_uit_van", "zaaktype_identificatie")]),
        ),
        migrations.AlterUniqueTogether(
            name="zaakobjecttype",
            unique_together=set([("is_relevant_voor", "objecttype")]),
        ),
        migrations.AlterUniqueTogether(
            name="statustype", unique_together=set([("is_van", "statustypevolgnummer")])
        ),
        migrations.AlterUniqueTogether(
            name="roltype", unique_together=set([("is_van", "roltypeomschrijving")])
        ),
        migrations.AlterUniqueTogether(
            name="resultaattype",
            unique_together=set([("is_relevant_voor", "resultaattypeomschrijving")]),
        ),
        migrations.AlterUniqueTogether(
            name="informatieobjecttype",
            unique_together=set(
                [("maakt_deel_uit_van", "informatieobjecttype_omschrijving")]
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eigenschap", unique_together=set([("is_van", "eigenschapnaam")])
        ),
        migrations.AlterUniqueTogether(
            name="besluittype",
            unique_together=set([("maakt_deel_uit_van", "besluittype_omschrijving")]),
        ),
    ]
